#%YAML 1.2
transactions:
  # 1. 创建新数据库
  - name: create_new_database
    steps:
      - action: create_database
        database_name: "cms.db"
  # 1. 创建基础表结构
  - name: create_base_tables
    steps:
      # 用户表
      - action: create_table
        table: users
        columns:
          - name: id
            type: integer
            primary_key: true
          - name: username
            type: string
            length: 50
            nullable: false
            unique: true
          - name: email
            type: string
            length: 100
            nullable: false
            unique: true
          - name: password_hash
            type: string
            length: 255
            nullable: false
          - name: display_name
            type: string
            length: 100
          - name: avatar_url
            type: string
            length: 255
          - name: bio
            type: text
          - name: role
            type: string
            length: 20
            default: "user"  # user, editor, admin
          - name: status
            type: string
            length: 20
            default: "active"  # active, suspended, deleted
          - name: email_verified
            type: boolean
            default: false
          - name: created_at
            type: datetime
            nullable: false
          - name: updated_at
            type: datetime
            nullable: false
          - name: last_login_at
            type: datetime

      # 分类表
      - action: create_table
        table: categories
        columns:
          - name: id
            type: integer
            primary_key: true
          - name: name
            type: string
            length: 50
            nullable: false
          - name: slug
            type: string
            length: 50
            nullable: false
            unique: true
          - name: description
            type: text
          - name: parent_id
            type: integer
            foreign_key:
              table: categories
              column: id
          - name: featured_image
            type: string
            length: 255
          - name: sort_order
            type: integer
            default: 0
          - name: created_at
            type: datetime
            nullable: false
          - name: updated_at
            type: datetime
            nullable: false

      # 标签表
      - action: create_table
        table: tags
        columns:
          - name: id
            type: integer
            primary_key: true
          - name: name
            type: string
            length: 50
            nullable: false
          - name: slug
            type: string
            length: 50
            nullable: false
            unique: true
          - name: description
            type: text
          - name: created_at
            type: datetime
            nullable: false

      # 文章表
      - action: create_table
        table: posts
        columns:
          - name: id
            type: integer
            primary_key: true
          - name: title
            type: string
            length: 200
            nullable: false
          - name: slug
            type: string
            length: 200
            nullable: false
            unique: true
          - name: content
            type: text
            nullable: false
          - name: excerpt
            type: text
          - name: featured_image
            type: string
            length: 255
          - name: author_id
            type: integer
            foreign_key:
              table: users
              column: id
          - name: category_id
            type: integer
            foreign_key:
              table: categories
              column: id
          - name: status
            type: string
            length: 20
            default: "draft"  # draft, published, archived
          - name: visibility
            type: string
            length: 20
            default: "public"  # public, private, password_protected
          - name: password
            type: string
            length: 255
          - name: published_at
            type: datetime
          - name: created_at
            type: datetime
            nullable: false
          - name: updated_at
            type: datetime
            nullable: false
          - name: views_count
            type: integer
            default: 0
          - name: likes_count
            type: integer
            default: 0
          - name: comments_enabled
            type: boolean
            default: true

      # 文章-标签关联表
      - action: create_table
        table: post_tags
        columns:
          - name: post_id
            type: integer
            foreign_key:
              table: posts
              column: id
          - name: tag_id
            type: integer
            foreign_key:
              table: tags
              column: id
          - name: created_at
            type: datetime
            nullable: false

      # 评论表
      - action: create_table
        table: comments
        columns:
          - name: id
            type: integer
            primary_key: true
          - name: post_id
            type: integer
            foreign_key:
              table: posts
              column: id
          - name: user_id
            type: integer
            foreign_key:
              table: users
              column: id
          - name: parent_id
            type: integer
            foreign_key:
              table: comments
              column: id
          - name: content
            type: text
            nullable: false
          - name: status
            type: string
            length: 20
            default: "pending"  # pending, approved, spam
          - name: created_at
            type: datetime
            nullable: false
          - name: updated_at
            type: datetime
            nullable: false
          - name: likes_count
            type: integer
            default: 0

      # 媒体库表
      - action: create_table
        table: media
        columns:
          - name: id
            type: integer
            primary_key: true
          - name: file_name
            type: string
            length: 255
            nullable: false
          - name: file_type
            type: string
            length: 50
            nullable: false
          - name: file_size
            type: integer
            nullable: false
          - name: file_path
            type: string
            length: 255
            nullable: false
          - name: uploaded_by
            type: integer
            foreign_key:
              table: users
              column: id
          - name: title
            type: string
            length: 255
          - name: description
            type: text
          - name: alt_text
            type: string
            length: 255
          - name: created_at
            type: datetime
            nullable: false
          - name: updated_at
            type: datetime
            nullable: false

      # SEO元数据表
      - action: create_table
        table: seo_metadata
        columns:
          - name: id
            type: integer
            primary_key: true
          - name: post_id
            type: integer
            foreign_key:
              table: posts
              column: id
          - name: meta_title
            type: string
            length: 200
          - name: meta_description
            type: text
          - name: meta_keywords
            type: text
          - name: og_title
            type: string
            length: 200
          - name: og_description
            type: text
          - name: og_image
            type: string
            length: 255
          - name: created_at
            type: datetime
            nullable: false
          - name: updated_at
            type: datetime
            nullable: false

  # 2. 初始化基础数据
  - name: initialize_base_data
    steps:
      # 创建管理员用户
      - action: insert
        table: users
        values:
          username: "admin"
          email: "admin@example.com"
          password_hash: "{{ hashed_password }}"
          display_name: "Administrator"
          role: "admin"
          status: "active"
          # email_verified: true
          created_at: "{{ current_timestamp }}"
          updated_at: "{{ current_timestamp }}"

      # 创建默认分类
      - action: insert
        table: categories
        values:
          name: "未分类"
          slug: "uncategorized"
          description: "默认分类"
          created_at: "{{ current_timestamp }}"
          updated_at: "{{ current_timestamp }}"

  # 3. 创建文章
  - name: post_blog_post
    steps:
      # # 上传特色图片
      # - action: upload_file
      #   folder_path: "uploads/images"
      #   file_name: "{{ file_name }}"
      #   file: "{{ featured_image }}"
      #   data_to: image_upload

      # 创建文章
      - action: insert
        data_from: image_upload
        table: posts
        values:
          title: title
          slug: slug
          content: content
          excerpt: excerpt
          featured_image: featured_image
          # featured_image: 
          #     data_from: image_upload
          #     data_key: destination
          author_id: current_user_id
          category_id: category_id
          status: status
          visibility: visibility
          published_at: "{{ current_timestamp }}"
          created_at: "{{ current_timestamp }}"
          updated_at: "{{ current_timestamp }}"
        data_to: new_post

      # # 添加标签
      # - action: for_each
      #   data_from: "{{ tags }}"
      #   steps:
      #     - action: insert
      #       table: post_tags
      #       values:
      #         post_id: "{{ new_post.id }}"
      #         tag_id: "{{ item }}"
      #         created_at: "{{ current_timestamp }}"

      # # 添加SEO信息
      # - action: insert
      #   table: seo_metadata
      #   values:
      #     post_id: "{{ new_post.id }}"
      #     meta_title: "{{ meta_title }}"
      #     meta_description: "{{ meta_description }}"
      #     meta_keywords: "{{ meta_keywords }}"
      #     created_at: "{{ current_timestamp }}"
      #     updated_at: "{{ current_timestamp }}"

  # 
  - name: update_post
    steps:
      # 上传特色图片
      - action: upload_file
        folder_path: "uploads/images"
        file_name: "{{ file_name }}"
        file: "{{ featured_image }}"
        data_to: image_upload
      - action: update
        data_from: image_upload
        table: posts
        values:
          title: "{{ title }}"
          content: "{{ content }}"
          status: "{{ status }}"
          visibility: "{{ visibility }}"
          category_id: "{{ category_id }}"
          author_id: "{{author_id}}"
          featured_image: 
              data_from: image_upload
              data_key: destination
          updated_at: "{{ current_timestamp }}"
        filter_values:
          - field: id
            operator: eq
            value: "{{ id }}"

  - name: delete_post
    steps:
      - action: delete
        table: posts
        filter_values:
          - field: id
            operator: eq
            value: "{{ id }}"

  # 4. 获取文章列表
  - name: get_posts
    steps:
    # 更新浏览次数
      - action: execute
        sql: "UPDATE posts SET views_count = COALESCE(views_count, 0) + 1 WHERE id = {{ post_id }}"
        
      - action: get
        table: posts
        fields:
          - field: id
          - field: title
          - field: slug
          - field: content
          - field: excerpt
          - field: featured_image
          - field: status
          - field: published_at
          - field: views_count
          - field: comments_enabled
          - table: users
            field: display_name
            label: author_name
          - table: categories
            field: name
            label: category_name
        join:
          - left_table: posts
            right_table: users
            type: left
            'on':
              - left_column: author_id
                right_column: id
          - left_table: posts
            right_table: categories
            type: left
            'on':
              - left_column: category_id
                right_column: id
        # filter_values:
        #   - field: status
        #     operator: eq
        #     value: "published"
        filter_values:
          - type: and
            conditions:
              - field: status
                operator: ne
                value: "{{ status }}"
              - field: id
                operator: eq
                value: "{{ post_id }}"
              - type: or
                conditions:
                  - field: id
                    operator: ilike
                    value: "{{ search_term }}"
                  - field: title
                    operator: ilike
                    value: "{{ search_term }}"
                  - field: content
                    operator: ilike
                    value: "{{ search_term }}"
                  - field: status
                    operator: ilike
                    value: "{{ search_term }}"
        order_by:
          - field: id
            direction: desc
        limit: "{{ limit }}"
        offset: "{{ offset }}"
        # limit: 5
        # offset: 5
        data_to: posts
      - action: get
        table: comments
        fields:
          - field: id
          - field: post_id
          - field: user_id
          - field: parent_id
          - field: content
          - field: status
          - field: created_at
          - field: updated_at
        filter_values:
          - field: post_id
            operator: eq
            value: "{{ post_id }}"
        order_by:
          - field: id
            direction: desc
        data_to: comments
        
  # 5. 获取文章详情
  - name: get_post_detail
    steps:
      # 更新浏览次数
      - action: execute
        sql: "UPDATE posts SET views_count = COALESCE(views_count, 0) + 1 WHERE id = {{ post_id }}"

      # 获取文章基本信息
      - action: get
        table: posts
        fields:
          # - field: "*"
          - field: id
          - field: title
          - field: slug
          - field: content
          - field: excerpt
          - field: featured_image
          - field: status
          - field: published_at
          - field: views_count
          - field: visibility
          - field: category_id
          - field: author_id
          - table: users
            field: display_name
            label: author_name
        #   - table: users
        #     field: avatar_url
        #     label: author_avatar
          - table: categories
            field: name
            label: category_name
        #   - table: categories
        #     field: slug
        #     label: category_slug
        join:
          - left_table: posts
            right_table: users
            type: left
            'on':
              - left_column: author_id
                right_column: id
          - left_table: posts
            right_table: categories
            type: left
            'on':
              - left_column: category_id
                right_column: id
        # filter_values:
        #   - field: slug
        #     operator: eq
        #     value: "{{ post_slug }}"
        filter_values:
          - field: id
            operator: eq
            value: "{{ post_id }}"
        data_to: post_info

      # # 获取文章标签
      # - action: get
      #   table: tags
      #   fields:
      #     - field: name
      #     - field: slug
      #   join:
      #     - left_table: tags
      #       right_table: post_tags
      #       type: inner
      #       on:
      #         - left_column: id
      #           right_column: tag_id
      #   filter_values:
      #     - field: post_id
      #       operator: eq
      #       value: "{{ post_info[0].id }}"
      #   data_to: post_tags

      # # 获取评论
      # - action: get
      #   table: comments
      #   fields:
      #     - field: id
      #     - field: content
      #     - field: created_at
      #     - field: parent_id
      #     - field: likes_count
      #     - table: users
      #       field: display_name
      #       label: user_name
      #     - table: users
      #       field: avatar_url
      #       label: user_avatar
      #   join:
      #     - left_table: comments
      #       right_table: users
      #       type: left
      #       on:
      #         - left_column: user_id
      #           right_column: id
      #   filter_values:
      #     - field: post_id
      #       operator: eq
      #       value: "{{ post_info[0].id }}"
      #     - field: status
      #       operator: eq
      #       value: "approved"
      #   order_by:
      #     - field: created_at
      #       direction: desc
      #   data_to: comments

      # 更新浏览次数
      # - action: execute
      #   sql: "UPDATE posts SET views_count = views_count + 1 WHERE id = {{ post_info[0].id }}"

  # 6. 添加评论
  - name: post_blog_post_comment
    steps:
      - action: insert
        table: comments
        values:
          post_id: post_id
          user_id: user_id
          parent_id: parent_id
          content: content
          status: status
          created_at: "{{ current_timestamp }}"
          updated_at: "{{ current_timestamp }}"


  # 4. 获取评论列表
  - name: get_comments
    steps:
      - action: get
        table: comments
        fields:
          - field: id
          - field: post_id
          - field: user_id
          - field: parent_id
          - field: content
          - field: status
          - field: created_at
          - field: updated_at
        filter_values:
          - field: post_id
            operator: eq
            value: "{{ post_id }}"
        order_by:
          - field: id
            direction: desc
        data_to: comments
  
  - name: add_categorie
    steps:
      - action: insert
        table: categories
        values:
          name: "{{ name }}"
          slug: "{{ slug }}"
          description: "{{ description }}"
          created_at: "{{ current_timestamp }}"
          updated_at: "{{ current_timestamp }}"

  - name: get_categories
    steps:
      - action: get
        table: categories
        fields:
          - field: id
          - field: name
          - field: slug
          - field: description
          - field: created_at
        data_to: categories
        
  - name: add_tag
    steps:
      - action: insert
        table: tags
        values:
          name: "{{ name }}"
          slug: "{{ slug }}"
          description: "{{ description }}"
          created_at: "{{ current_timestamp }}"

  - name: get_tags
    steps:
      - action: get
        table: tags
        fields:
          - field: id
          - field: name
          - field: slug
          - field: description
          - field: created_at
        data_to: tags

  - name: add_user
    steps:
      - action: insert
        table: users
        values:
          username: "{{ username }}"
          display_name: "{{ display_name }}"
          email: "{{ email }}"
          password_hash: "{{ password_hash }}"
          created_at: "{{ current_timestamp }}"
          updated_at: "{{ current_timestamp }}"

  - name: get_users
    steps:
      - action: get
        table: users
        fields:
          - field: id
          - field: username
          - field: email
          - field: password_hash
          - field: display_name
          - field: avatar_url
          - field: bio
          - field: role
          - field: status
          - field: email_verified
          - field: created_at
          - field: updated_at
          - field: last_login_at
        data_to: users
            
  # 7. 获取分类列表（带文章计数）
  - name: get_categories_with_count
    steps:
      - action: get
        table: categories
        fields:
          - field: id
          - field: name
          - field: slug
          - field: description
          - field: parent_id
          - field: featured_image
          - field: id
            function: count
            label: post_count
            table: posts
        join:
          - left_table: categories
            right_table: posts
            type: left
            on:
              - left_column: id
                right_column: category_id
        group_by:
          - field: id
          - field: name
          - field: slug
          - field: description
          - field: parent_id
          - field: featured_image
        order_by:
          - field: sort_order
            direction: asc
          - field: name
            direction: asc

  # 8. 搜索文章
  - name: search_posts
    steps:
      - action: get
        table: posts
        fields:
          - field: id
          - field: title
          - field: slug
          - field: excerpt
          - field: featured_image
          - field: published_at
          # - table: users
          #   field: display_name
          #   label: author_name
          # - table: categories
          #   field: name
          #   label: category_name
        # join:
        #   - left_table: posts
        #     right_table: users
        #     type: left
        #     on:
        #       - left_column: author_id
        #         right_column: id
        #   - left_table: posts
        #     right_table: categories
        #     type: left
        #     on:
        #       - left_column: category_id
        #         right_column: id
        #   # 添加标签关联，用于标签搜索
        #   - left_table: posts
        #     right_table: post_tags
        #     type: left
        #     on:
        #       - left_column: id
        #         right_column: post_id
        #   - left_table: post_tags
        #     right_table: tags
        #     type: left
        #     on:
        #       - left_column: tag_id
        #         right_column: id
        filter_values:
          - type: and
            conditions:
              # - field: status
              #   operator: eq
              #   value: "published"
              - field: id
                operator: gt
                value: 0
              - type: or
                conditions:
                  - field: title
                    operator: ilike
                    value: "{{ search_term }}"
                  - field: content
                    operator: ilike
                    value: "{{ search_term }}"
                  # - table: tags
                  #   field: name
                  #   operator: ilike
                  #   value: "%{{ search_term }}%"
        # order_by:
        #   - field: published_at
        #     direction: desc
        # limit: "{{ page_size }}"
        # offset: "{{ (page_number - 1) * page_size }}"



  # # 1. 创建基础表结构
  # - name: create_base_tables
  #   steps:
  #     # 用户表
  #     - action: create_table
  #       table: users
  #       columns:
  #         - name: id
  #           type: integer
  #           primary_key: true
  #         - name: username
  #           type: string
  #           length: 50
  #           nullable: false
  #           unique: true
  #         - name: email
  #           type: string
  #           length: 100
  #           nullable: false
  #           unique: true
  #         - name: password_hash
  #           type: string
  #           length: 255
  #           nullable: false
  #         - name: display_name
  #           type: string
  #           length: 100
  #         - name: avatar_url
  #           type: string
  #           length: 255
  #         - name: bio
  #           type: text
  #         - name: role
  #           type: string
  #           length: 20
  #           default: "user"  # user, editor, admin
  #         - name: status
  #           type: string
  #           length: 20
  #           default: "active"  # active, suspended, deleted
  #         - name: email_verified
  #           type: boolean
  #           default: false
  #         - name: created_at
  #           type: datetime
  #           nullable: false
  #         - name: updated_at
  #           type: datetime
  #           nullable: false
  #         - name: last_login_at
  #           type: datetime

  #     # 分类表
  #     - action: create_table
  #       table: categories
  #       columns:
  #         - name: id
  #           type: integer
  #           primary_key: true
  #         - name: name
  #           type: string
  #           length: 50
  #           nullable: false
  #         - name: slug
  #           type: string
  #           length: 50
  #           nullable: false
  #           unique: true
  #         - name: description
  #           type: text
  #         - name: parent_id
  #           type: integer
  #           foreign_key:
  #             table: categories
  #             column: id
  #         - name: featured_image
  #           type: string
  #           length: 255
  #         - name: sort_order
  #           type: integer
  #           default: 0
  #         - name: created_at
  #           type: datetime
  #           nullable: false
  #         - name: updated_at
  #           type: datetime
  #           nullable: false

  #     # 标签表
  #     - action: create_table
  #       table: tags
  #       columns:
  #         - name: id
  #           type: integer
  #           primary_key: true
  #         - name: name
  #           type: string
  #           length: 50
  #           nullable: false
  #         - name: slug
  #           type: string
  #           length: 50
  #           nullable: false
  #           unique: true
  #         - name: description
  #           type: text
  #         - name: created_at
  #           type: datetime
  #           nullable: false

  #     # 文章表
  #     - action: create_table
  #       table: posts
  #       columns:
  #         - name: id
  #           type: integer
  #           primary_key: true
  #         - name: title
  #           type: string
  #           length: 200
  #           nullable: false
  #         - name: slug
  #           type: string
  #           length: 200
  #           nullable: false
  #           unique: true
  #         - name: content
  #           type: text
  #           nullable: false
  #         - name: excerpt
  #           type: text
  #         - name: featured_image
  #           type: string
  #           length: 255
  #         - name: author_id
  #           type: integer
  #           foreign_key:
  #             table: users
  #             column: id
  #         - name: category_id
  #           type: integer
  #           foreign_key:
  #             table: categories
  #             column: id
  #         - name: status
  #           type: string
  #           length: 20
  #           default: "draft"  # draft, published, archived
  #         - name: visibility
  #           type: string
  #           length: 20
  #           default: "public"  # public, private, password_protected
  #         - name: password
  #           type: string
  #           length: 255
  #         - name: published_at
  #           type: datetime
  #         - name: created_at
  #           type: datetime
  #           nullable: false
  #         - name: updated_at
  #           type: datetime
  #           nullable: false
  #         - name: views_count
  #           type: integer
  #           default: 0
  #         - name: likes_count
  #           type: integer
  #           default: 0
  #         - name: comments_enabled
  #           type: boolean
  #           default: true

  #     # 文章-标签关联表
  #     - action: create_table
  #       table: post_tags
  #       columns:
  #         - name: post_id
  #           type: integer
  #           foreign_key:
  #             table: posts
  #             column: id
  #         - name: tag_id
  #           type: integer
  #           foreign_key:
  #             table: tags
  #             column: id
  #         - name: created_at
  #           type: datetime
  #           nullable: false

  #     # 评论表
  #     - action: create_table
  #       table: comments
  #       columns:
  #         - name: id
  #           type: integer
  #           primary_key: true
  #         - name: post_id
  #           type: integer
  #           foreign_key:
  #             table: posts
  #             column: id
  #         - name: user_id
  #           type: integer
  #           foreign_key:
  #             table: users
  #             column: id
  #         - name: parent_id
  #           type: integer
  #           foreign_key:
  #             table: comments
  #             column: id
  #         - name: content
  #           type: text
  #           nullable: false
  #         - name: status
  #           type: string
  #           length: 20
  #           default: "pending"  # pending, approved, spam
  #         - name: created_at
  #           type: datetime
  #           nullable: false
  #         - name: updated_at
  #           type: datetime
  #           nullable: false
  #         - name: likes_count
  #           type: integer
  #           default: 0

  #     # 媒体库表
  #     - action: create_table
  #       table: media
  #       columns:
  #         - name: id
  #           type: integer
  #           primary_key: true
  #         - name: file_name
  #           type: string
  #           length: 255
  #           nullable: false
  #         - name: file_type
  #           type: string
  #           length: 50
  #           nullable: false
  #         - name: file_size
  #           type: integer
  #           nullable: false
  #         - name: file_path
  #           type: string
  #           length: 255
  #           nullable: false
  #         - name: uploaded_by
  #           type: integer
  #           foreign_key:
  #             table: users
  #             column: id
  #         - name: title
  #           type: string
  #           length: 255
  #         - name: description
  #           type: text
  #         - name: alt_text
  #           type: string
  #           length: 255
  #         - name: created_at
  #           type: datetime
  #           nullable: false
  #         - name: updated_at
  #           type: datetime
  #           nullable: false

  #     # SEO元数据表
  #     - action: create_table
  #       table: seo_metadata
  #       columns:
  #         - name: id
  #           type: integer
  #           primary_key: true
  #         - name: post_id
  #           type: integer
  #           foreign_key:
  #             table: posts
  #             column: id
  #         - name: meta_title
  #           type: string
  #           length: 200
  #         - name: meta_description
  #           type: text
  #         - name: meta_keywords
  #           type: text
  #         - name: og_title
  #           type: string
  #           length: 200
  #         - name: og_description
  #           type: text
  #         - name: og_image
  #           type: string
  #           length: 255
  #         - name: created_at
  #           type: datetime
  #           nullable: false
  #         - name: updated_at
  #           type: datetime
  #           nullable: false

  # # 2. 初始化基础数据
  # - name: initialize_base_data
  #   steps:
  #     # 创建管理员用户
  #     - action: insert
  #       table: users
  #       values:
  #         username: "admin"
  #         email: "admin@example.com"
  #         password_hash: "{{ hashed_password }}"
  #         display_name: "Administrator"
  #         role: "admin"
  #         status: "active"
  #         email_verified: true
  #         created_at: "{{ current_timestamp }}"
  #         updated_at: "{{ current_timestamp }}"

  #     # 创建默认分类
  #     - action: insert
  #       table: categories
  #       values:
  #         name: "未分类"
  #         slug: "uncategorized"
  #         description: "默认分类"
  #         created_at: "{{ current_timestamp }}"
  #         updated_at: "{{ current_timestamp }}"

  # # 3. 创建文章
  # - name: create_post
  #   steps:
  #     # 上传特色图片
  #     - action: upload_file
  #       folder_path: "uploads/images"
  #       file_name: "{{ file_name }}"
  #       file: "{{ featured_image }}"
  #       data_to: image_upload

  #     # 创建文章
  #     - action: insert
  #       table: posts
  #       values:
  #         title: "{{ title }}"
  #         slug: "{{ slug }}"
  #         content: "{{ content }}"
  #         excerpt: "{{ excerpt }}"
  #         featured_image: "{{ image_upload.destination }}"
  #         author_id: "{{ current_user_id }}"
  #         category_id: "{{ category_id }}"
  #         status: "{{ status }}"
  #         visibility: "{{ visibility }}"
  #         published_at: "{{ published_at }}"
  #         created_at: "{{ current_timestamp }}"
  #         updated_at: "{{ current_timestamp }}"
  #       data_to: new_post

  #     # 添加标签
  #     - action: for_each
  #       data_from: "{{ tags }}"
  #       steps:
  #         - action: insert
  #           table: post_tags
  #           values:
  #             post_id: "{{ new_post.id }}"
  #             tag_id: "{{ item }}"
  #             created_at: "{{ current_timestamp }}"

  #     # 添加SEO信息
  #     - action: insert
  #       table: seo_metadata
  #       values:
  #         post_id: "{{ new_post.id }}"
  #         meta_title: "{{ meta_title }}"
  #         meta_description: "{{ meta_description }}"
  #         meta_keywords: "{{ meta_keywords }}"
  #         created_at: "{{ current_timestamp }}"
  #         updated_at: "{{ current_timestamp }}"

  # # 4. 获取文章列表
  # - name: get_posts_list
  #   steps:
  #     - action: get
  #       table: posts
  #       fields:
  #         - field: id
  #         - field: title
  #         - field: slug
  #         - field: excerpt
  #         - field: featured_image
  #         - field: status
  #         - field: published_at
  #         - field: views_count
  #         - field: comments_enabled
  #         - table: users
  #           field: display_name
  #           label: author_name
  #         - table: categories
  #           field: name
  #           label: category_name
  #       join:
  #         - left_table: posts
  #           right_table: users
  #           type: left
  #           on:
  #             - left_column: author_id
  #               right_column: id
  #         - left_table: posts
  #           right_table: categories
  #           type: left
  #           on:
  #             - left_column: category_id
  #               right_column: id
  #       filter_values:
  #         - field: status
  #           operator: eq
  #           value: "published"
  #       order_by:
  #         - field: published_at
  #           direction: desc
  #       limit: "{{ page_size }}"
  #       offset: "{{ (page_number - 1) * page_size }}"

  # # 5. 获取文章详情
  # - name: get_post_detail
  #   steps:
  #     # 获取文章基本信息
  #     - action: get
  #       
  
  #       fields:
  #         - field: "*"
  #         - table: users
  #           field: display_name
  #           label: author_name
  #         - table: users
  #           field: avatar_url
  #           label: author_avatar
  #         - table: categories
  #           field: name
  #           label: category_name
  #         - table: categories
  #           field: slug
  #           label: category_slug
  #       join:
  #         - left_table: posts
  #           right_table: users
  #           type: left
  #           on:
  #             - left_column: author_id
  #               right_column: id
  #         - left_table: posts
  #           right_table: categories
  #           type: left
  #           on:
  #             - left_column: category_id
  #               right_column: id
  #       filter_values:
  #         - field: slug
  #           operator: eq
  #           value: "{{ post_slug }}"
  #       data_to: post_info

  #     # 获取文章标签
  #     - action: get
  #       table: tags
  #       fields:
  #         - field: name
  #         - field: slug
  #       join:
  #         - left_table: tags
  #           right_table: post_tags
  #           type: inner
  #           on:
  #             - left_column: id
  #               right_column: tag_id
  #       filter_values:
  #         - field: post_id
  #           operator: eq
  #           value: "{{ post_info[0].id }}"
  #       data_to: post_tags

  #     # 获取评论
  #     - action: get
  #       table: comments
  #       fields:
  #         - field: id
  #         - field: content
  #         - field: created_at
  #         - field: parent_id
  #         - field: likes_count
  #         - table: users
  #           field: display_name
  #           label: user_name
  #         - table: users
  #           field: avatar_url
  #           label: user_avatar
  #       join:
  #         - left_table: comments
  #           right_table: users
  #           type: left
  #           on:
  #             - left_column: user_id
  #               right_column: id
  #       filter_values:
  #         - field: post_id
  #           operator: eq
  #           value: "{{ post_info[0].id }}"
  #         - field: status
  #           operator: eq
  #           value: "approved"
  #       order_by:
  #         - field: created_at
  #           direction: desc
  #       data_to: comments

  #     # 更新浏览次数
  #     - action: execute
  #       sql: "UPDATE posts SET views_count = views_count + 1 WHERE id = {{ post_info[0].id }}"

  # # 6. 添加评论
  # - name: add_comment
  #   steps:
  #     - action: insert
  #       table: comments
  #       values:
  #         post_id: "{{ post_id }}"
  #         user_id: "{{ current_user_id }}"
  #         parent_id: "{{ parent_id }}"
  #         content: "{{ content }}"
  #         status: "{{ status }}"
  #         created_at: "{{ current_timestamp }}"
  #         updated_at: "{{ current_timestamp }}"

  # # 7. 获取分类列表（带文章计数）
  # - name: get_categories_with_count
  #   steps:
  #     - action: get
  #       table: categories
  #       fields:
  #         - field: id
  #         - field: name
  #         - field: slug
  #         - field: description
  #         - field: parent_id
  #         - field: featured_image
  #         - field: id
  #           function: count
  #           label: post_count
  #           table: posts
  #       join:
  #         - left_table: categories
  #           right_table: posts
  #           type: left
  #           on:
  #             - left_column: id
  #               right_column: category_id
  #       group_by:
  #         - field: id
  #         - field: name
  #         - field: slug
  #         - field: description
  #         - field: parent_id
  #         - field: featured_image
  #       order_by:
  #         - field: sort_order
  #           direction: asc
  #         - field: name
  #           direction: asc

  # # 8. 搜索文章
  # - name: search_posts
  #   steps:
  #     - action: get
  #       table: posts
  #       fields:
  #         - field: id
  #         - field: title
  #         - field: slug
  #         - field: excerpt
  #         - field: featured_image
  #         - field: published_at
  #         - table: users
  #           field: display_name
  #           label: author_name
  #         - table: categories
  #           field: name
  #           label: category_name
  #       join:
  #         - left_table: posts
  #           right_table: users
  #           type: left
  #           on:
  #             - left_column: author_id
  #               right_column: id
  #         - left_table: posts
  #           right_table: categories
  #           type: left
  #           on:
  #             - left_column: category_id
  #               right_column: id
  #         # 添加标签关联，用于标签搜索
  #         - left_table: posts
  #           right_table: post_tags
  #           type: left
  #           on:
  #             - left_column: id
  #               right_column: post_id
  #         - left_table: post_tags
  #           right_table: tags
  #           type: left
  #           on:
  #             - left_column: tag_id
  #               right_column: id
  #       filter_values:
  #         - type: and
  #           conditions:
  #             - field: status
  #               operator: eq
  #               value: "published"
  #             - type: or
  #               conditions:
  #                 - field: title
  #                   operator: ilike
  #                   value: "%{{ search_term }}%"
  #                 - field: content
  #                   operator: ilike
  #                   value: "%{{ search_term }}%"
  #                 - table: tags
  #                   field: name
  #                   operator: ilike
  #                   value: "%{{ search_term }}%"
  #       order_by:
  #         - field: published_at
  #           direction: desc
  #       limit: "{{ page_size }}"
  #       offset: "{{ (page_number - 1) * page_size }}"

  # # 9. 获取标签云
  # - name: get_tag_cloud
  #   steps:
  #     - action: get
  #       table: tags
  #       fields:
  #         - field: id
  #         - field: name
  #         - field: slug
  #         - field: id
  #           function: count
  #           label: post_count
  #           table: post_tags
  #       join:
  #         - left_table: tags
  #           right_table: post_tags
  #           type: left
  #           on:
  #             - left_column: id
  #               right_column: tag_id
  #       group_by:
  #         - field: id
  #         - field: name
  #         - field: slug
  #       having:
  #         - field: post_count
  #           operator: gt
  #           value: 0
  #       order_by:
  #         - field: post_count
  #           direction: desc
  #         - field: name
  #           direction: asc

  # # 10. 获取归档数据
  # - name: get_archives
  #   steps:
  #     - action: get
  #       table: posts
  #       fields:
  #         - field: published_at
  #           function: date_trunc
  #           part: month
  #           label: month
  #         - field: id
  #           function: count
  #           label: post_count
  #       filter_values:
  #         - field: status
  #           operator: eq
  #           value: "published"
  #         - field: published_at
  #           operator: is_not_null
  #       group_by:
  #         - field: month
  #       order_by:
  #         - field: month
  #           direction: desc

  # # 11. 用户仪表板统计
  # - name: get_user_dashboard_stats
  #   steps:
  #     # 获取用户文章统计
  #     - action: get
  #       table: posts
  #       fields:
  #         - field: status
  #         - field: id
  #           function: count
  #           label: post_count
  #       filter_values:
  #         - field: author_id
  #           operator: eq
  #           value: "{{ current_user_id }}"
  #       group_by:
  #         - field: status
  #       data_to: post_stats

  #     # 获取用户评论统计
  #     - action: get
  #       table: comments
  #       fields:
  #         - field: status
  #         - field: id
  #           function: count
  #           label: comment_count
  #       filter_values:
  #         - field: user_id
  #           operator: eq
  #           value: "{{ current_user_id }}"
  #       group_by:
  #         - field: status
  #       data_to: comment_stats

  #     # 获取最近文章浏览量
  #     - action: get
  #       table: posts
  #       fields:
  #         - field: title
  #         - field: slug
  #         - field: views_count
  #         - field: published_at
  #       filter_values:
  #         - field: author_id
  #           operator: eq
  #           value: "{{ current_user_id }}"
  #         - field: published_at
  #           operator: ge
  #           value: "{{ last_30_days }}"
  #       order_by:
  #         - field: views_count
  #           direction: desc
  #       limit: 5
  #       data_to: popular_posts

  # # 12. 批量操作文章
  # - name: bulk_update_posts
  #   steps:
  #     - action: update
  #       table: posts
  #       values:
  #         status: "{{ new_status }}"
  #         updated_at: "{{ current_timestamp }}"
  #       filter_values:
  #         - field: id
  #           operator: in
  #           value: "{{ post_ids }}"

  # # 13. 生成站点地图
  # - name: generate_sitemap
  #   steps:
  #     # 获取所有已发布的文章
  #     - action: get
  #       table: posts
  #       fields:
  #         - field: slug
  #         - field: updated_at
  #       filter_values:
  #         - field: status
  #           operator: eq
  #           value: "published"
  #       data_to: posts

  #     # 获取所有分类
  #     - action: get
  #       table: categories
  #       fields:
  #         - field: slug
  #         - field: updated_at
  #       data_to: categories

  #     # 获取所有标签
  #     - action: get
  #       table: tags
  #       fields:
  #         - field: slug
  #         - field: id
  #           function: count
  #           label: post_count
  #           table: post_tags
  #       join:
  #         - left_table: tags
  #           right_table: post_tags
  #           type: left
  #           on:
  #             - left_column: id
  #               right_column: tag_id
  #       group_by:
  #         - field: slug
  #       having:
  #         - field: post_count
  #           operator: gt
  #           value: 0
  #       data_to: tags

  #     # 生成 sitemap.xml
  #     - action: file_create
  #       file_name: "sitemap.xml"
  #       content_type: "xml"
  #       data_from: "combined_urls"

  # # 14. 导入文章
  # - name: import_posts
  #   steps:
  #     - action: upload_file
  #       folder_path: "imports"
  #       file_name: "{{ file_name }}"
  #       file: "{{ import_file }}"
  #       data_to: upload_result

  #     # 处理导入的数据
  #     - action: for_each
  #       data_from: "{{ processed_data }}"
  #       steps:
  #         - action: insert
  #           table: posts
  #           values:
  #             title: "{{ item.title }}"
  #             slug: "{{ item.slug }}"
  #             content: "{{ item.content }}"
  #             excerpt: "{{ item.excerpt }}"
  #             author_id: "{{ current_user_id }}"
  #             status: "draft"
  #             created_at: "{{ current_timestamp }}"
  #             updated_at: "{{ current_timestamp }}"

  # # 15. 生成 RSS Feed
  # - name: generate_rss_feed
  #   steps:
  #     - action: get
  #       table: posts
  #       fields:
  #         - field: title
  #         - field: slug
  #         - field: excerpt
  #         - field: content
  #         - field: published_at
  #         - field: updated_at
  #         - table: users
  #           field: display_name
  #           label: author_name
  #         - table: categories
  #           field: name
  #           label: category_name
  #       join:
  #         - left_table: posts
  #           right_table: users
  #           type: left
  #           on:
  #             - left_column: author_id
  #               right_column: id
  #         - left_table: posts
  #           right_table: categories
  #           type: left
  #           on:
  #             - left_column: category_id
  #               right_column: id
  #       filter_values:
  #         - field: status
  #           operator: eq
  #           value: "published"
  #       order_by:
  #         - field: published_at
  #           direction: desc
  #       limit: 20
  #       data_to: feed_posts

  #     # 生成 RSS XML
  #     - action: file_create
  #       file_name: "feed.xml"
  #       content_type: "xml"
  #       data_from: "feed_posts"

  # # 16. 统计报告
  # - name: generate_statistics_report
  #   steps:
  #     # 按月统计文章发布数量
  #     - action: get
  #       table: posts
  #       fields:
  #         - field: published_at
  #           function: date_trunc
  #           part: month
  #           label: month
  #         - field: id
  #           function: count
  #           label: post_count
  #       filter_values:
  #         - field: status
  #           operator: eq
  #           value: "published"
  #         - field: published_at
  #           operator: between
  #           value: ["{{ report_start_date }}", "{{ report_end_date }}"]
  #       group_by:
  #         - field: month
  #       order_by:
  #         - field: month
  #           direction: asc
  #       data_to: monthly_posts

  #     # 统计热门分类
  #     - action: get
  #       table: categories
  #       fields:
  #         - field: name
  #         - field: id
  #           function: count
  #           label: post_count
  #           table: posts
  #       join:
  #         - left_table: categories
  #           right_table: posts
  #           type: left
  #           on:
  #             - left_column: id
  #               right_column: category_id
  #       filter_values:
  #         - field: status
  #           operator: eq
  #           value: "published"
  #         - table: posts
  #           field: published_at
  #           operator: between
  #           value: ["{{ report_start_date }}", "{{ report_end_date }}"]
  #       group_by:
  #         - field: name
  #       order_by:
  #         - field: post_count
  #           direction: desc
  #       data_to: category_stats

  #     # 统计热门作者
  #     - action: get
  #       table: users
  #       fields:
  #         - field: display_name
  #         - field: id
  #           function: count
  #           label: post_count
  #           table: posts
  #         - table: posts
  #           field: views_count
  #           function: sum
  #           label: total_views
  #       join:
  #         - left_table: users
  #           right_table: posts
  #           type: left
  #           on:
  #             - left_column: id
  #               right_column: author_id
  #       filter_values:
  #         - field: status
  #           operator: eq
  #           value: "published"
  #         - table: posts
  #           field: published_at
  #           operator: between
  #           value: ["{{ report_start_date }}", "{{ report_end_date }}"]
  #       group_by:
  #         - field: display_name
  #       order_by:
  #         - field: total_views
  #           direction: desc
  #       data_to: author_stats