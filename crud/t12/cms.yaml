#%YAML 1.2
transactions:
  # 1. 创建新数据库
  - name: create_new_database
    steps:
      - action: create_database
        database_name: "cms.db"
  # 1. 创建基础表结构
  - name: create_base_tables
    steps:
      # 用户表
      - action: create_table
        table: users
        columns:
          - name: id
            type: integer
            primary_key: true
          - name: username
            type: string
            length: 50
            nullable: false
            unique: true
          - name: email
            type: string
            length: 100
            nullable: false
            unique: true
          - name: password_hash
            type: string
            length: 255
            nullable: false
          - name: display_name
            type: string
            length: 100
          - name: avatar_url
            type: string
            length: 255
          - name: bio
            type: text
          - name: role
            type: string
            length: 20
            default: "user"  # user, editor, admin
          - name: status
            type: string
            length: 20
            default: "active"  # active, suspended, deleted
          - name: email_verified
            type: boolean
            default: false
          - name: created_at
            type: datetime
            nullable: false
          - name: updated_at
            type: datetime
            nullable: false
          - name: last_login_at
            type: datetime

      # 分类表
      - action: create_table
        table: categories
        columns:
          - name: id
            type: integer
            primary_key: true
          - name: name
            type: string
            length: 50
            nullable: false
          - name: slug
            type: string
            length: 50
            nullable: false
            unique: true
          - name: description
            type: text
          - name: parent_id
            type: integer
            foreign_key:
              table: categories
              column: id
          - name: featured_image
            type: string
            length: 255
          - name: sort_order
            type: integer
            default: 0
          - name: created_at
            type: datetime
            nullable: false
          - name: updated_at
            type: datetime
            nullable: false

      # 标签表
      - action: create_table
        table: tags
        columns:
          - name: id
            type: integer
            primary_key: true
          - name: name
            type: string
            length: 50
            nullable: false
          - name: slug
            type: string
            length: 50
            nullable: false
            unique: true
          - name: description
            type: text
          - name: created_at
            type: datetime
            nullable: false

      # 文章表
      - action: create_table
        table: posts
        columns:
          - name: id
            type: integer
            primary_key: true
          - name: title
            type: string
            length: 200
            nullable: false
          - name: slug
            type: string
            length: 200
            nullable: false
            unique: true
          - name: content
            type: text
            nullable: false
          - name: excerpt
            type: text
          - name: featured_image
            type: string
            length: 255
          - name: author_id
            type: integer
            foreign_key:
              table: users
              column: id
          - name: category_id
            type: integer
            foreign_key:
              table: categories
              column: id
          - name: status
            type: string
            length: 20
            default: "draft"  # draft, published, archived
          - name: visibility
            type: string
            length: 20
            default: "public"  # public, private, password_protected
          - name: password
            type: string
            length: 255
          - name: published_at
            type: datetime
          - name: created_at
            type: datetime
            nullable: false
          - name: updated_at
            type: datetime
            nullable: false
          - name: views_count
            type: integer
            default: 0
          - name: likes_count
            type: integer
            default: 0
          - name: comments_enabled
            type: boolean
            default: true

      # 文章-标签关联表
      - action: create_table
        table: post_tags
        columns:
          - name: post_id
            type: integer
            foreign_key:
              table: posts
              column: id
          - name: tag_id
            type: integer
            foreign_key:
              table: tags
              column: id
          - name: created_at
            type: datetime
            nullable: false

      # 评论表
      - action: create_table
        table: comments
        columns:
          - name: id
            type: integer
            primary_key: true
          - name: post_id
            type: integer
            foreign_key:
              table: posts
              column: id
          - name: user_id
            type: integer
            foreign_key:
              table: users
              column: id
          - name: parent_id
            type: integer
            foreign_key:
              table: comments
              column: id
          - name: content
            type: text
            nullable: false
          - name: status
            type: string
            length: 20
            default: "pending"  # pending, approved, spam
          - name: created_at
            type: datetime
            nullable: false
          - name: updated_at
            type: datetime
            nullable: false
          - name: likes_count
            type: integer
            default: 0

      # 媒体库表
      - action: create_table
        table: media
        columns:
          - name: id
            type: integer
            primary_key: true
          - name: file_name
            type: string
            length: 255
            nullable: false
          - name: file_type
            type: string
            length: 50
            nullable: false
          - name: file_size
            type: integer
            nullable: false
          - name: file_path
            type: string
            length: 255
            nullable: false
          - name: uploaded_by
            type: integer
            foreign_key:
              table: users
              column: id
          - name: title
            type: string
            length: 255
          - name: description
            type: text
          - name: alt_text
            type: string
            length: 255
          - name: created_at
            type: datetime
            nullable: false
          - name: updated_at
            type: datetime
            nullable: false

      # SEO元数据表
      - action: create_table
        table: seo_metadata
        columns:
          - name: id
            type: integer
            primary_key: true
          - name: post_id
            type: integer
            foreign_key:
              table: posts
              column: id
          - name: meta_title
            type: string
            length: 200
          - name: meta_description
            type: text
          - name: meta_keywords
            type: text
          - name: og_title
            type: string
            length: 200
          - name: og_description
            type: text
          - name: og_image
            type: string
            length: 255
          - name: created_at
            type: datetime
            nullable: false
          - name: updated_at
            type: datetime
            nullable: false

  # 2. 初始化基础数据
  - name: initialize_base_data
    steps:
      # 创建管理员用户
      - action: insert
        table: users
        values:
          username: "admin"
          email: "admin@example.com"
          password_hash: "{{ hashed_password }}"
          display_name: "Administrator"
          role: "admin"
          status: "active"
          # email_verified: true
          created_at: "{{ current_timestamp }}"
          updated_at: "{{ current_timestamp }}"

      # 创建默认分类
      - action: insert
        table: categories
        values:
          name: "未分类"
          slug: "uncategorized"
          description: "默认分类"
          created_at: "{{ current_timestamp }}"
          updated_at: "{{ current_timestamp }}"

  # 3. 创建文章
  - name: post_blog_posts
    steps:
      # 创建文章
      - action: insert
        data_from: image_upload
        table: posts
        values:
          title: title
          slug: slug
          content: content
          excerpt: excerpt
          featured_image: featured_image
          author_id: current_user_id
          category_id: category_id
          status: status
          visibility: visibility
          published_at: "{{ current_timestamp }}"
          created_at: "{{ current_timestamp }}"
          updated_at: "{{ current_timestamp }}"
        data_to: new_post
  # 
  - name: put_blog_posts
    steps:
      - action: update
        table: posts
        values:
          title: title
          content: content
          status: status
          visibility: visibility
          category_id: category_id
          author_id: author_id
          featured_image: featured_image
          updated_at: "{{ current_timestamp }}"
        filter_values:
          - field: id
            operator: eq
            value: "{{ id }}"

  - name: delete_blog_posts
    steps:
      - action: delete
        table: posts
        filter_values:
          - field: id
            operator: eq
            value: "{{ id }}"

  # 4. 获取文章列表
  - name: get_blog_posts_count
    steps:
      - action: get
        table: posts
        fields:
          - field: id
            function: count
            label: count
        filter_values:
          - type: and
            conditions:
              - type: or
                conditions:
                  - field: id
                    operator: ilike
                    value: "{{ search_term }}"
                  - field: title
                    operator: ilike
                    value: "{{ search_term }}"
                  - field: content
                    operator: ilike
                    value: "{{ search_term }}"
                  - field: status
                    operator: ilike
                    value: "{{ search_term }}"
        data_to: posts
        
  # 4. 获取文章列表
  - name: get_blog_posts
    steps:
    # 更新浏览次数
      - action: execute
        sql: "UPDATE posts SET views_count = COALESCE(views_count, 0) + 1 WHERE id = {{ id }}"
        
      - action: get
        table: posts
        fields:
          - field: id
          - field: title
          - field: slug
          - field: content
          - field: excerpt
          - field: featured_image
          - field: status
          - field: published_at
          - field: views_count
          - field: comments_enabled
          - table: users
            field: display_name
            label: author_name
          - table: categories
            field: name
            label: category_name
        join:
          - left_table: posts
            right_table: users
            type: left
            'on':
              - left_column: author_id
                right_column: id
          - left_table: posts
            right_table: categories
            type: left
            'on':
              - left_column: category_id
                right_column: id
        filter_values:
          - type: and
            conditions:
              - field: status
                operator: ne
                value: "{{ status }}"
              - field: id
                operator: eq
                value: "{{ id }}"
              - type: or
                conditions:
                  - field: id
                    operator: ilike
                    value: "{{ search_term }}"
                  - field: title
                    operator: ilike
                    value: "{{ search_term }}"
                  - field: content
                    operator: ilike
                    value: "{{ search_term }}"
                  - field: status
                    operator: ilike
                    value: "{{ search_term }}"
        order_by:
          - field: id
            direction: desc
        limit: "{{ limit }}"
        offset: "{{ offset }}"
        data_to: posts
        
  # 5. 获取文章详情
  - name: get_post_detail
    steps:
      # 更新浏览次数
      - action: execute
        sql: "UPDATE posts SET views_count = COALESCE(views_count, 0) + 1 WHERE id = {{ id }}"

      # 获取文章基本信息
      - action: get
        table: posts
        fields:
          # - field: "*"
          - field: id
          - field: title
          - field: slug
          - field: content
          - field: excerpt
          - field: featured_image
          - field: status
          - field: published_at
          - field: views_count
          - field: visibility
          - field: category_id
          - field: author_id
          - table: users
            field: display_name
            label: author_name
          - table: categories
            field: name
            label: category_name
        join:
          - left_table: posts
            right_table: users
            type: left
            'on':
              - left_column: author_id
                right_column: id
          - left_table: posts
            right_table: categories
            type: left
            'on':
              - left_column: category_id
                right_column: id
        filter_values:
          - field: id
            operator: eq
            value: "{{ id }}"
        data_to: post_info

  # 6. 添加评论
  - name: post_blog_post_comments
    steps:
      - action: insert
        table: comments
        values:
          post_id: post_id
          user_id: user_id
          parent_id: parent_id
          content: content
          status: status
          created_at: "{{ current_timestamp }}"
          updated_at: "{{ current_timestamp }}"

  - name: delete_blog_post_comments
    steps:
      - action: delete
        table: comments
        filter_values:
          - field: id
            operator: eq
            value: "{{ id }}"
            
  # 4. 获取评论列表
  - name: get_blog_post_comments
    steps:
      - action: get
        table: comments
        fields:
          - field: id
          - field: post_id
          - field: user_id
          - field: parent_id
          - field: content
          - field: status
          - field: created_at
          - field: updated_at
        filter_values:
          - field: post_id
            operator: eq
            value: "{{ id }}"
        order_by:
          - field: id
            direction: desc
        data_to: comments
  
  - name: add_categorie
    steps:
      - action: insert
        table: categories
        values:
          name: name
          slug: slug
          description: description
          created_at: "{{ current_timestamp }}"
          updated_at: "{{ current_timestamp }}"

  - name: get_categories
    steps:
      - action: get
        table: categories
        fields:
          - field: id
          - field: name
          - field: slug
          - field: description
          - field: created_at
        data_to: categories
        
  - name: add_tag
    steps:
      - action: insert
        table: tags
        values:
          name: name
          slug: slug
          description: description
          created_at: "{{ current_timestamp }}"

  - name: get_tags
    steps:
      - action: get
        table: tags
        fields:
          - field: id
          - field: name
          - field: slug
          - field: description
          - field: created_at
        data_to: tags

  - name: add_user
    steps:
      - action: insert
        table: users
        values:
          username: username
          display_name: display_name
          email: email
          password_hash: password_hash
          created_at: "{{ current_timestamp }}"
          updated_at: "{{ current_timestamp }}"

  - name: get_users
    steps:
      - action: get
        table: users
        fields:
          - field: id
          - field: username
          - field: email
          - field: password_hash
          - field: display_name
          - field: avatar_url
          - field: bio
          - field: role
          - field: status
          - field: email_verified
          - field: created_at
          - field: updated_at
          - field: last_login_at
        data_to: users
            
  # 7. 获取分类列表（带文章计数）
  - name: get_categories_with_count
    steps:
      - action: get
        table: categories
        fields:
          - field: id
          - field: name
          - field: slug
          - field: description
          - field: parent_id
          - field: featured_image
          - field: id
            function: count
            label: post_count
            table: posts
        join:
          - left_table: categories
            right_table: posts
            type: left
            on:
              - left_column: id
                right_column: category_id
        group_by:
          - field: id
          - field: name
          - field: slug
          - field: description
          - field: parent_id
          - field: featured_image
        order_by:
          - field: sort_order
            direction: asc
          - field: name
            direction: asc

  # 8. 搜索文章
  - name: search_posts
    steps:
      - action: get
        table: posts
        fields:
          - field: id
          - field: title
          - field: slug
          - field: excerpt
          - field: featured_image
          - field: published_at
        filter_values:
          - type: and
            conditions:
              - field: id
                operator: gt
                value: 0
              - type: or
                conditions:
                  - field: title
                    operator: ilike
                    value: "{{ search_term }}"
                  - field: content
                    operator: ilike
                    value: "{{ search_term }}"
