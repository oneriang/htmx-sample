layout: |
    <style>
        html:has(.drawer-toggle:checked) {
            overflow-y: hidden;
            scrollbar-gutter: auto
        }
        .drawer-content {
            transition: margin-left 0.3s ease-in-out;
        }

        .drawer-side.drawer-side-left{
            left: -30rem; /* Start off-screen */
            transition: left 0.3s ease-in-out;
            width: 90%;
        }
        .drawer-side.drawer-side-left ul.menu{
            flex-wrap: nowrap;
        }
        #drawer-left:checked ~ .drawer-side {
            left: 0;
        }

        /* 基础样式 */
        .drawer-content {
            transition: margin-left 0.3s ease-in-out;
        }

        /* 大屏幕样式 */
        @media screen and (min-width: 1024px) {
            #drawer-left:checked ~ .drawer-content {
                margin-left: 20rem; /* 匹配抽屉宽度 */
            }
        }

        /* 小屏幕样式 */
        @media screen and (max-width: 1023px) {
            #drawer-left:checked ~ .drawer-content {
                margin-left: 0; /* 在小屏幕上不移动内容 */
            }
            
            # /* 可选：为小屏幕设置抽屉样式 */
            # .drawer {
            #     position: fixed;
            #     left: -20rem;
            #     width: 20rem;
            #     height: 100%;
            #     transition: left 0.3s ease-in-out;
            # }
            
            # #drawer-left:checked ~ .drawer {
            #     left: 0;
            # }

            .drawer-side.drawer-side-left{
                left: -20rem; /* Start off-screen */
                transition: left 0.3s ease-in-out;
                width: 100%;
            }
        }
        
        p.content {
          overflow-wrap: break-word;
          word-break: break-all;
        }
    </style>

    <div class="drawer">
        <input id="drawer-left" type="checkbox" class="drawer-toggle" />
        <div class="drawer-content flex flex-col">
            <!-- Navbar -->
            <div class="w-full navbar bg-base-300">
                <div class="flex-none">
                    <label for="drawer-left" aria-label="toggle left sidebar" class="btn btn-square btn-ghost lg:hidden">
                        {{ icons.menu}}
                     </label>
                    <label for="drawer-left" aria-label="toggle left sidebar" class="btn btn-square btn-ghost hidden lg:flex">
                        {{ icons.menu }}
                    </label>
                </div>
                <div class="flex-1 px-2 mx-2"><a href="{{ attributes.url if attributes and attributes.url else '/' }}">{{ attributes.title }}</a></div>
                <div class="flex-none">
                    <label for="drawer-right" aria-label="open right sidebar" class="btn btn-square btn-ghost">
                        {{ icons.user }}
                    </label>
                </div>
            </div>
            {{ format_children(children.generic) }}
            <!-- Main content -->
            <div class="grid mb-2 pt-2 pb-2 px-2 rounded-3xl bg-gray-100 border-4 border-green-400">
                {{ format_children(children.content_main) }}
            </div>
        </div>
        <!-- Left drawer -->
        <div class="drawer-side drawer-side-left">
            <label for="drawer-left" aria-label="close left sidebar" class="drawer-overlay"></label>
            <ul class="menu p-4 w-80 h-full bg-base-200 text-base-content overflow-y-auto">
                {{ format_children(children.left_sidebar) }}
            </ul>
        </div>
    </div>

    <!-- Right drawer -->
    <div class="drawer drawer-end">
        <input id="drawer-right" type="checkbox" class="drawer-toggle" />
        <div class="drawer-content">
            <!-- Page content here -->
        </div> 
        <div class="drawer-side">
            <label for="drawer-right" aria-label="close right sidebar" class="drawer-overlay"></label>
            <ul class="menu p-4 w-80 min-h-full bg-base-200 text-base-content">
                {{ format_children(children.right_sidebar) }}
            </ul>
        </div>
    </div>

    <script>
        function closeDrawer() {
            // document.getElementById('drawer-left').checked = false;
        }

        // 为所有的li元素添加点击事件
        document.querySelectorAll('.drawer-side li').forEach(item => {
            item.addEventListener('click', closeDrawer);
        });
    </script>

    <script type="text/javascript">

        function onMousedownDataCardTrash(me) {
            me.parentNode.classList.add('hidden');
            me.parentNode.previousElementSibling.classList.remove('hidden');
        }

        function onMousedownDataCardCancel(me) {
            me.parentNode.classList.add('hidden');
            me.parentNode.nextElementSibling.classList.remove('hidden');
        }
    </script>
#
"layout_login": |
    <div class="relative flex flex-col justify-center h-screen overflow-hidden">
        <div class="w-full p-6 m-auto bg-white rounded-md shadow-md md:max-w-lg">
            <h1 class="text-3xl font-semibold text-center text-purple-700">{{ attributes.title }}</h1>
            {{ format_children(children) }}
        </div>
    </div>
#
"layout_registration": |
    <div class="relative flex flex-col justify-center h-screen overflow-hidden">
        <div class="w-full p-6 m-auto bg-white rounded-md shadow-md md:max-w-lg">
            <h1 class="text-3xl font-semibold text-center text-purple-700">{{ attributes.title }}</h1>
            {{ format_children(children) }}
        </div>
    </div>
#
"drawer_content": |
    {{ format_children(children) }}
#
"content_main": |
    {{ format_children(children) }}
#
"container": |
    <div {{ format_attr(attributes) if attributes }}>
        {{ format_children(children) }}
    </div>
#
"card": |
    <a class="transform  hover:scale-105 transition duration-300 shadow-xl rounded-lg col-span-12 sm:col-span-6 xl:col-span-3 intro-y bg-white"
                                    href="#">
        <div class="p-5">
            <div class="flex justify-between">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-7 w-7 text-green-400"
                    fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round"
                        stroke-width="2"
                        d="M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z" />
                </svg>
                <div
                    class="bg-blue-500 rounded-full h-6 px-2 flex justify-items-center text-white font-semibold text-sm">
                    <span class="flex items-center">30%</span>
                </div>
            </div>
            <div class="ml-2 w-full flex-1">
                <div>
                    <div class="mt-3 text-3xl font-bold leading-8">4.510</div>

                    <div class="mt-1 text-base text-gray-600">Item Sales</div>
                </div>
            </div>
        </div>
    </a>
#
"grid": |
    <div class="grid grid-cols-12 gap-6">
        <div class="grid grid-cols-12 col-span-12 gap-6 xxl:col-span-9">
            <div class="grid col-span-12 gap-6 mt-5">
                {{ format_children(children) }}
            </div>
        </div>
    </div>
#
"list": |
    {% for item in value %}
            {% if item.get %}
                <li>
                    <a href="#"
                        hx-get="{{- './component?' -}}
                        {{- 'table_name=' ~ item.text -}}&
                        {{- 'component_id=' ~ item.component_id -}}"
                        hx-target="#data-table"
                        hx-push-url="true"
                        hx-swap="outerHTML"
                        class="w-full" style="width:100%;">
                            {{ item.text }}
                        </a>
            {% else %}
                <li><a class="link" href="{{item.link}}">{{ item.text }}</a></li>
            {% endif %}
        {% endfor %}
#
"data-table": |
    <div id="data-table" class="overflow-x-auto mt-0">
      {{ format_children(children.header) }}
      {{ format_children(children.content) }}
      {{ format_children(children.footer) }}
    </div>
#
"data_table_content": |
    <div class="overflow-x-auto mt-0" id="table-content">
        <div class="flex space-x-2">
            {{ config.name }}
            <button hx-get="/create?table_name={{ config.name }}" 
                    hx-target="#modal-content"
                    hx-trigger="click" onclick="modal_form.showModal()" 
                    class="text-blue-500 hover:underline">
                    {{ icons['add'] }}
            </button>
        </div>
        <table class="min-w-full bg-white border-collapse">
            <thead>
                <tr>
                    <th class="border px-4 py-2 sticky-left sticky-left-shadow max-w-24 w-24">Actions</th>
                    {% for column in config.columns %}
                        {% if not column['is_hidden'] %}
                            <th class="border px-4 py-2" style="overflow: hidden; resize: horizontal;">
                                <div>
                                    <a href="#"
                                    hx-get="{{- '/component?' -}}
                                    table_name={{ config.name }}&
                                    {{- 'component_id=' ~ config.component_id -}}&
                                    {{- 'page=' ~ data.page -}}&
                                    {{- 'search=' ~ data.search -}}&
                                    {{- 'sort_column=' ~ column['name'] -}}&
                                    {{- 'sort_direction=' -}}
                                    {%- if data.sort_column == column['name'] and data.sort_direction == 'asc' -%}
                                        {{- 'desc' -}}
                                    {%- else -%}
                                        {{- 'asc' -}}
                                    {%- endif -%}"
                                    hx-target="#data-table"
                                    class="{% if data.sort_column == column['name'] %}sort-{{ data.sort_direction }}{% endif %}"
                                    >
                                        {{ column['label'] or column['name'] }}
                                        <span class="sort-icon"></span>
                                    </a>
                                </div>
                             </th>
                        {% endif %}
                  {% endfor %}
              </tr>
            </thead>
            <tbody>
                {% for row in data.rows %}
                    <tr class="hover:bg-gray-100">
                        <td class="border px-4 py-2 sticky-left sticky-left-shadow">
                            <button hx-get="/edit?table_name={{ config.name }}&id={{ row[data.primary_key] }}" hx-target="#modal-content"
                              hx-trigger="click" onclick="modal_form.showModal()" class="text-blue-500 hover:underline">
                              <span class="hidden">Edit</span>
                              {{ icons.edit }}
                            </button>
                            <button hx-get="/delete?table_name={{ config.name }}&id={{ row[data.primary_key] }}" hx-target="#modal-content"
                              hx-trigger="click" onclick="modal_form.showModal()" class="text-red-500 hover:underline">
                              <span class="hidden">Delete</span>
                              {{ icons.delete }}
                            </button>
                        </td>
                        {% for column in config.columns %}
                            {% if not column['is_hidden'] %}
                                <td class="border px-4 py-2">{{ row[column['name']] or '' }}</td>
                            {% endif %}
                        {% endfor %}
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
#
"data-card": |
    <div class="overflow-x-auto mt-0" id="table-content">
        {{ config.name }}
        <button hx-get="/create?table_name={{ config.name }}" hx-target="#modal-content"
                          hx-trigger="click" onclick="modal_form.showModal()" class="text-blue-500 hover:underline">Create</button>
        {% if True %}
        {% for row in data.rows %}
            <div class="card bg-base-100 w-96 shadow-xl hidden my-2">          
                {% for column in config.columns %}
                    {% if not column['is_hidden'] %}
                        {% if 'img' in column %}
                            <figure>
                                <img
                                src="https://img.daisyui.com/images/stock/photo-1606107557195-0e29a4b5b4aa.webp"
                                alt="Shoes" />
                            </figure>
                        {% else %}
                            <div class="card-body">
                                <h2 class="card-title">
                                Shoes!
                                <div class="badge badge-secondary">NEW</div>
                                </h2>
                                <p>If a dog chews shoes whose shoes does he choose?</p>
                                <div class="card-actions justify-end">
                                <div class="badge badge-outline">Fashion</div>
                                <div class="badge badge-outline">Products</div>
                                </div>
                            </div>
                        {% endif %}
                    {% endif %}
                {% endfor %}
            </div>
            <div class="card lg:card-side bg-base-100 shadow-xl my-2">
                <div class="card-body">
                    {% for column in config.columns %}
                        {% if not column['is_hidden'] %}
                            {% if 'img' in column %}
                                <figure>
                                    <img
                                    src="https://img.daisyui.com/images/stock/photo-1494232410401-ad00d5433cfa.webp"
                                    alt="Album" />
                                </figure>
                            {% else %}
                                <h2 class="card-title">{{ column['name'] }}</h2>
                                <p>{{ row[column['name']] or '' }}</p>
                            {% endif %}
                        {% endif %}
                    {% endfor %}
                    <div class="card-actions justify-end">
                        <button hx-get="/edit?table_name={{ config.name }}&id={{ row[data.primary_key] }}" hx-target="#modal-content"
                          hx-trigger="click" onclick="modal_form.showModal()" class="text-blue-500 hover:underline">Edit</button>
                        <button hx-get="/delete?table_name={{ config.name }}&id={{ row[data.primary_key] }}" hx-target="#modal-content"
                          hx-trigger="click" onclick="modal_form.showModal()" class="text-red-500 hover:underline">Delete</button>
                    </div>
                </div>
             </div>
        {% endfor %}
        {% endif %}
        <div class="mt-4 flex justify-between items-center">
            <p>Showing 
                {{ (data.page - 1) * data.page_size + 1 }} 
                to 
                {{ min(data.page * data.page_size, data.total_items) }} 
                of 
                {{ data.total_items }} 
                records
            </p>
          <div class="flex space-x-2">
              {% if data.page > 1 %}
                  <button
                      hx-get="{{- '/component?' -}}
                      {{- 'component_id=' ~ config.component_id -}}&
                      {{- 'page=' ~ (data.page - 1) -}}&
                      {{- 'page_size=' ~ data.page_size -}}&
                      {{- 'sort_column=' ~ data.sort_column -}}&
                      {{- 'sort_direction=' ~ data.sort_direction -}}
                      {%- for key, value in data.search_params.items() -%}
                          &{{ key }}={{ value }}
                      {%- endfor -%}"
                      hx-target="#table-content"
                      class="bg-blue-500 text-white px-4 py-2 rounded"
                  >
                      Previous
                  </button>
              {% endif %}
              {% if data.page < data.total_pages %} 
                  <button
                      hx-get="{{- '/component?' -}}
                      {{- 'component_id=' ~ config.component_id -}}&
                      {{- 'page=' ~ (data.page + 1) -}}&
                      {{- 'page_size=' ~ data.page_size -}}&
                      {{- 'sort_column=' ~ data.sort_column -}}&
                      {{- 'sort_direction=' ~ data.sort_direction -}}
                      {%- for key, value in data.search_params.items() -%}
                          &{{ key }}={{ value }}
                      {%- endfor -%}"
                      hx-target="#table-content"
                      class="bg-blue-500 text-white px-4 py-2 rounded"
                  >
                      Next
                  </button>
              {% endif %}
                  <button
                      hx-get="{{- '/component?' -}}
                      {{- 'component_id=' ~ config.component_id -}}&
                      {{- 'page=' ~ data.page -}}&
                      {{- 'page_size=' ~ data.page_size -}}&
                      {{- 'sort_column=' ~ data.sort_column -}}&
                      {{- 'sort_direction=' ~ data.sort_direction -}}
                      {%- for key, value in data.search_params.items() -%}
                          &{{ key }}={{ value }}
                      {%- endfor -%}"
                      hx-target="#table-content"
                      id="btn-table-refresh"
                      class="bg-blue-500 text-white px-4 py-2 rounded"
                  >
                      Refresh
                  </button>
          </div>
        </div>
    </div>
#
"data_search_form": |
    <form hx-get="/component/?component_id=main_data_table&table_name={{ config.name }}" 
        hx-target="#data-table" hx-swap="outerHTML" hx-push-url="false" 
        class="my-4 flex space-x-2 px-2">
        <input value="{{ data.search_params['keyword'] if 'keyword' in data.search_params else '' }}" 
          type="text" 
          name="keyword" 
          placeholder="Search..." 
          class="input input-bordered input-sm w-full ">
        <button 
          class="text-blue-500" 
          onclick="this.previousElementSibling.value = ''"
        >
          {{ icons.remove }}
        </button>
        <button type="submit" class="text-blue-500">
            <span class="hidden">Search</span>
            {{ icons.search }}
        </button>
    </form>
#
"data-list": |
    {{ format_children(children.header) }}
    {{ format_children(children.content) }}
#
"data_list_content": |
    <div class="overflow-x-auto mt-0" id="table-content">
        <style>
            div#table-content li {
                /* box-sizing: border-box; */
                /* border-width: 0; */
                /* border-style: solid; */
                border-color: #e5e7eb;
            }
        </style>
        <div class="flex space-x-2">
            {{ config.name }}
            <button hx-get="/create?table_name={{ config.name }}" 
                    hx-target="#modal-content"
                    hx-trigger="click" onclick="modal_form.showModal()" 
                    class="text-blue-500 hover:underline">
                    {{ icons['add'] }}
            </button>
        </div>    
        <ul role="list" class="divide-y divide-gray-100">
            {% for row in data.rows %}
                <li class="flex justify-between gap-x-6 py-5">
                    <div class="flex min-w-0 gap-x-4">
                        {% for column in config.columns %}
                        {% if not column['is_hidden'] %}
                            {% if 'img' in column %}
                                <figure>
                                    <img
                                    src="https://img.daisyui.com/images/stock/photo-1606107557195-0e29a4b5b4aa.webp"
                                    alt="Shoes" />
                                </figure>
                            {% else %}
                                <div class="min-w-0 flex-auto">
                                    <p class="text-sm font-semibold leading-6 text-gray-900 hidden">{{ column['name'] }}</p>
                                    {% if column['type'] == 'BOOLEAN' %}
                                      <input type="checkbox" name="{{ column['name'] }}" class="checkbox" {% if row[column['name']] == true %}checked{% endif %}>
                                    {% else %}
                                      <p class="mt-1 truncate text-xs leading-5 text-gray-500">{{ row[column['name']] or '' }}</p>
                                    {% endif %}
                                </div>
                            {% endif %}
                        {% endif %}
                        {% endfor %}
                    </div>
                    <div class="card-actions justify-end">
                        <button hx-get="/edit?table_name={{ config.name }}&id={{ row[data.primary_key] }}" hx-target="#modal-content"
                          hx-trigger="click" onclick="modal_form.showModal()" class="text-blue-500 hover:underline">
                          <span class="hidden">Edit</span>
                          {{ icons.edit }}
                        </button>
                        <button hx-get="/delete?table_name={{ config.name }}&id={{ row[data.primary_key] }}" hx-target="#modal-content"
                          hx-trigger="click" onclick="modal_form.showModal()" class="text-red-500 hover:underline">
                          <span class="hidden">Delete</span>
                          {{ icons.delete }}
                        </button>
                    </div>
                </li>
            {% endfor %}
        </ul>
        <div class="mt-4 flex justify-between items-center">
            <p>
                {{ (data.page - 1) * data.page_size + 1 }} 
                to 
                {{ min(data.page * data.page_size, data.total_items) }} 
                of 
                {{ data.total_items }}
            </p>
            <div class="flex space-x-2">
                {% if data.page > 1 %}
                    <button
                        hx-get="{{- '/component?' -}}
                        {{- 'component_id=' ~ config.component_id -}}&
                        {{- 'page=' ~ (data.page - 1) -}}&
                        {{- 'page_size=' ~ data.page_size -}}&
                        {{- 'sort_column=' ~ data.sort_column -}}&
                        {{- 'sort_direction=' ~ data.sort_direction -}}
                        {%- for key, value in data.search_params.items() -%}
                            &{{ key }}={{ value }}
                        {%- endfor -%}"
                        hx-target="#table-content"
                        class="text-blue-500 hover:underline"
                    >
                        <span class="hidden">Previous</span>
                        {{ icons.prev }}
                    </button>
                {% endif %}
                {% if data.page < data.total_pages %} 
                    <button
                        hx-get="{{- '/component?' -}}
                        {{- 'component_id=' ~ config.component_id -}}&
                        {{- 'page=' ~ (data.page + 1) -}}&
                        {{- 'page_size=' ~ data.page_size -}}&
                        {{- 'sort_column=' ~ data.sort_column -}}&
                        {{- 'sort_direction=' ~ data.sort_direction -}}
                        {%- for key, value in data.search_params.items() -%}
                            &{{ key }}={{ value }}
                        {%- endfor -%}"
                        hx-target="#table-content"
                        class="text-blue-500 hover:underline"
                    >
                        <span class="hidden">Next</span>
                        {{ icons.next }}
                    </button>
                {% endif %}
                    <button
                        hx-get="{{- '/component?' -}}
                        {{- 'component_id=' ~ config.component_id -}}&
                        {{- 'page=' ~ data.page -}}&
                        {{- 'page_size=' ~ data.page_size -}}&
                        {{- 'sort_column=' ~ data.sort_column -}}&
                        {{- 'sort_direction=' ~ data.sort_direction -}}
                        {%- for key, value in data.search_params.items() -%}
                            &{{ key }}={{ value }}
                        {%- endfor -%}"
                        hx-target="#table-content"
                        id="btn-table-refresh"
                        class="text-blue-500 hover:underline"
                        
                    >
                        <span class="hidden">Refresh</span>
                        {{ icons.refresh }}
                    </button>
            </div>
        </div>
    </div>
#
"table1": |
    <div class="overflow-x-auto">
        <table class="table {{ attributes.class.value }}">
            <thead>
                <tr>
                    {% for header in attributes.headers.value %}
                        <th>{{ header }}</th>
                    {% endfor %}
                </tr>
            </thead>
            <tbody>
                {% for row in attributes.rows.value %}
                    <tr>
                        {% for cell in row %}
                            <td>{{ cell }}</td>
                        {% endfor %}
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
#
"table": |
    <div class="overflow-x-auto">
      <table class="table table-xs table-pin-rows table-pin-cols">
        <thead>
          <tr>
            <th></th>
            <td>Name</td>
            <td>Job</td>
            <td>company</td>
            <td>location</td>
            <td>Last Login</td>
            <td>Favorite Color</td>
            <th></th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <th>1</th>
            <td>Cy Ganderton</td>
            <td>Quality Control Specialist</td>
            <td>Littel, Schaden and Vandervort</td>
            <td>Canada</td>
            <td>12/16/2020</td>
            <td>Blue</td>
            <th>1</th>
          </tr>
          <tr>
            <th>2</th>
            <td>Hart Hagerty</td>
            <td>Desktop Support Technician</td>
            <td>Zemlak, Daniel and Leannon</td>
            <td>United States</td>
            <td>12/5/2020</td>
            <td>Purple</td>
            <th>2</th>
          </tr>
          <tr>
            <th>3</th>
            <td>Brice Swyre</td>
            <td>Tax Accountant</td>
            <td>Carroll Group</td>
            <td>China</td>
            <td>8/15/2020</td>
            <td>Red</td>
            <th>3</th>
          </tr>
        </tbody>
        <tfoot>
          <tr>
            <th></th>
            <td>Name</td>
            <td>Job</td>
            <td>company</td>
            <td>location</td>
            <td>Last Login</td>
            <td>Favorite Color</td>
            <th></th>
          </tr>
        </tfoot>
      </table>
    </div>
#
"data_pagination": |
    <div class="mt-4 flex justify-between items-center">
        <p>
            {{ (data.page - 1) * data.page_size + 1 }} 
            to 
            {{ min(data.page * data.page_size, data.total_items) }} 
            of 
            {{ data.total_items }}
        </p>
        <div class="flex space-x-2">
            {% if data.page > 1 %}
                <button
                    hx-get="{{- '/component?' -}}
                    {{- 'component_id=' ~ config.component_id -}}&
                    {{- 'page=' ~ (data.page - 1) -}}&
                    {{- 'page_size=' ~ data.page_size -}}&
                    {{- 'sort_column=' ~ data.sort_column -}}&
                    {{- 'sort_direction=' ~ data.sort_direction -}}
                    {%- for key, value in data.search_params.items() -%}
                        &{{ key }}={{ value }}
                    {%- endfor -%}"
                    hx-target="#data-table"
                    class="text-blue-500 hover:underline"
                >
                    <span class="hidden">Previous</span>
                    {{ icons.prev }}
                </button>
            {% endif %}
            {% if data.page < data.total_pages %} 
                <button
                    hx-get="{{- '/component?' -}}
                    {{- 'component_id=' ~ config.component_id -}}&
                    {{- 'page=' ~ (data.page + 1) -}}&
                    {{- 'page_size=' ~ data.page_size -}}&
                    {{- 'sort_column=' ~ data.sort_column -}}&
                    {{- 'sort_direction=' ~ data.sort_direction -}}
                    {%- for key, value in data.search_params.items() -%}
                        &{{ key }}={{ value }}
                    {%- endfor -%}"
                    hx-target="#data-table"
                    class="text-blue-500 hover:underline"
                >
                    <span class="hidden">Next</span>
                    {{ icons.next }}
                </button>
            {% endif %}
                <button
                    hx-get="{{- '/component?' -}}
                    {{- 'component_id=' ~ config.component_id -}}&
                    {{- 'page=' ~ data.page -}}&
                    {{- 'page_size=' ~ data.page_size -}}&
                    {{- 'sort_column=' ~ data.sort_column -}}&
                    {{- 'sort_direction=' ~ data.sort_direction -}}
                    {%- for key, value in data.search_params.items() -%}
                        &{{ key }}={{ value }}
                    {%- endfor -%}"
                    hx-target="#data-table"
                    id="btn-table-refresh"
                    class="text-blue-500 hover:underline"
                    
                >
                    <span class="hidden">Refresh</span>
                    {{ icons.refresh }}
                </button>
        </div>
    </div>
#
"form": |
    <form class="{{ attributes.class }}"
      {% if attributes.hx_post %}hx-post="{{ attributes.hx_post }}"{% endif %}
      {% if attributes.hx_target %}hx-target="{{ attributes.hx_target }}"{% endif %}
      {% if attributes.hx_encoding %}hx-encoding="{{ attributes.hx_encoding }}"{% endif %}
      {% if attributes.enctype %}enctype="{{ attributes.enctype }}"{% endif %}
      {% for attr, value in attributes.items() %}
          {% if attr not in ['class', 'fields', 'submit_text', 'hx_post', 'hx_target', 'hx_encoding', 'enctype'] %}
              {{ attr }}="{{ value }}"
          {% endif %}
      {% endfor %}>
        <div class="form-control w-full mb-4">
            {{ format_children(children) }}
        </div>
    </form>
#
"input": |
    <label class="label">
        <span class="label-text">{{ attributes.label }}</span>
    </label>
    {% if attributes.type == 'text' or attributes.type == 'email' or attributes.type == 'password' or attributes.type == 'number' or attributes.type == 'date' %}
        <input {% if attributes.disabled %}disabled{% endif %} {% if attributes.readonly %}readonly{% endif %} type="{{ attributes.type }}" name="{{ attributes.name }}" placeholder="{{ attributes.placeholder }}" class="input input-bordered w-full" {% if attributes.required %}required{% endif %}>
    {% elif attributes.type == 'textarea' %}
        <textarea name="{{ attributes.name }}" placeholder="{{ attributes.placeholder }}" class="textarea textarea-bordered w-full" {% if attributes.required %}required{% endif %}></textarea>
    {% elif attributes.type == 'select' %}
        <select name="{{ attributes.name }}" class="select select-bordered w-full" {% if attributes.required %}required{% endif %}>
            {% for option in attributes.options %}
                <option value="{{ option.value }}">{{ option.label }}</option>
            {% endfor %}
        </select>
    {% elif attributes.type == 'checkbox' %}
        <div class="flex items-center mt-2">
            <input type="checkbox" name="{{ attributes.name }}" class="checkbox" {% if attributes.required %}required{% endif %}>
            <span class="ml-2">{{ attributes.checkboxLabel }}</span>
        </div>
    {% elif attributes.type == 'radio' %}
        <div class="flex flex-col mt-2">
            {% for option in attributes.options %}
                <label class="flex items-center mb-2">
                    <input type="radio" name="{{ attributes.name }}" value="{{ option.value }}" class="radio" {% if attributes.required %}required{% endif %}>
                    <span class="ml-2">{{ option.label }}</span>
                </label>
            {% endfor %}
        </div>
    {% elif attributes.type == 'file' %}
        <input type="file" name="{{ attributes.name }}" class="file-input file-input-bordered w-full" {% if attributes.required %}required{% endif %}>
    {% endif %}
    {% if attributes.helpText %}
        <label class="label">
            <span class="label-text-alt text-info">{{ attributes.helpText }}</span>
        </label>
    {% endif %}
#
"navbar": |
    <div class="navbar bg-base-100 {{ attributes.class.value }}">
        <div class="flex-1">
            <a class="btn btn-ghost normal-case text-xl">{{ attributes.title.value }}</a>
        </div>
        <div class="flex-none hidden md:block">
            <ul class="menu menu-horizontal px-1">
                {% for item in attributes.menu_items.value %}
                    <li><a href="{{ item.link }}">{{ item.text }}</a></li>
                {% endfor %}
            </ul>
        </div>
        <div class="flex-none md:hidden">
            <button class="btn btn-square btn-ghost" data-drawer-target="my-drawer">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="inline-block w-5 h-5 stroke-current"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path></svg>
            </button>
        </div>
    </div>
#
"modal_message": |
    <dialog id="{{ attributes.id.value }}" class="modal">
        <div method="dialog" class="modal-box">
            <h3 class="font-bold text-lg">{{ attributes.title.value }}</h3>
            <p class="py-4">{{ attributes.content.value }}</p>
            <div class="modal-action">
              <form method="dialog">
                <button class="btn">Close</button>
              </form>
            </div>
        </div>
    </dialog>
#
"modal_form": |
    <dialog id="{{ attributes.id.value }}" class="modal">
        <div method="dialog" class="modal-box">
            <h3 class="font-bold text-lg hidden">{{ attributes.title.value }}</h3>
            <div id="modal-content" class="modal-content">
            </div>
            <div class="modal-action hidden">
              <form method="dialog">
                <button class="btn">Close</button>
              </form>
            </div>
        </div>
    </dialog>
#
"form_base": |
    <h2 class="text-xl font-bold mb-4">
    {{ attributes.title }} {{ config.table_name }}
    </h2>
    <form id="myForm" hx-post="/{{ attributes.mode }}/{{ config.table_name }}" hx-target="#target">
        {% for column in config.table_config['columns'] %}
            {% if column['is_hidden'] %}
            {% else %}
                <div class="mb-4">
                    <label for="{{ column['name'] }}" class="block text-sm font-bold mb-2">
                        {% if column['label'] %}
                            {{ column['label'] }}
                        {% else %}
                            {{ column['name'] }}
                        {% endif %}
                    </label>
                    {% if column['input_type'] == 'text' %}
                      <input type="text" 
                            id="{{ column['name'] }}" 
                            name="{{ column['name'] }}" 
                            value="{{ config.data[column['name']] }}" 
                            {% if column['primary_key'] %}readonly{% endif %}
                            {% if attributes.mode == 'delete' %}disabled {% endif %}
                            class="{{ classes.input }}"
                            {% if column['disabled'] %}disabled{% endif %} 
                            {% if column['readonly'] %}readonly{% endif %}
                      >
                    {% elif column['input_type'] == 'number' %}
                        <input 
                            type="number" 
                            id="{{ column['name'] }}" name="{{ column['name'] }}" 
                            value="{{ config.data[column['name']] }}" 
                            {% if column['primary_key'] %}readonly{% endif %}
                            class="{{ classes.input }}"
                            {% if column['disabled'] %}disabled{% endif %} 
                            {% if column['readonly'] %}readonly{% endif %}
                        >
                    {% elif column['input_type'] == 'date' %}
                        <input 
                            type="date" 
                            id="{{ column['name'] }}" 
                            name="{{ column['name'] }}" 
                            {% if config.data[column['name']] %}
                                value="{{ config.data[column['name']].strftime('%Y-%m-%d') }}" 
                            {% endif %}
                            {% if column['primary_key'] %}readonly{% endif %}
                            class="{{ classes.input }}"
                            {% if column['disabled'] %}disabled{% endif %} 
                            {% if column['readonly'] %}readonly{% endif %}
                        >
                    {% elif column['input_type'] == 'checkbox' %}
                        <input 
                            type="checkbox" 
                            id="{{ column['name'] }}" 
                            name="{{ column['name'] }}" 
                            {% if config.data[column['name']] %} checked {% endif %} 
                            {% if column['primary_key'] %}disabled{% endif %} 
                            class="mr-2 leading-tight checkbox"
                            {% if column['disabled'] %}disabled{% endif %} 
                            {% if column['readonly'] %}readonly{% endif %}
                        >
                    {% elif column['input_type'] == 'select' %}
                        <select 
                            id="{{ column['name'] }}" 
                            name="{{ column['name'] }}" 
                            {% if column['primary_key'] %}disabled{% endif %}
                            class="{{ classes.input }}">
                            {% for option in column['options'] %}
                                <option 
                                    value="{{ option }}" 
                                    {% if config.data[column['name']]==option %}selected{% endif %}>
                                    {{ option }}
                                </option>
                            {% endfor %}
                            {% if column['disabled'] %}disabled{% endif %} 
                            {% if column['readonly'] %}readonly{% endif %} 
                        </select>
                    {% endif %}
                </div>
            {% endif %}
        {% endfor %}
        <div class="flex justify-end">
            <button type="button" onclick="hideModal()"
                class="btn bg-gray-500 hover:bg-gray-700 text-white mr-2">Cancel</button>
            {% if attributes.mode == 'create' %}
            <button type="submit"
                class="btn bg-green-500 hover:bg-blue-700 text-white">Create</button>
            {% endif %}
            {% if attributes.mode == 'edit' %}
            <button type="submit"
                class="btn bg-blue-500 hover:bg-blue-700 text-white">Update</button>
            {% endif %}
            {% if attributes.mode == 'delete' %}
            <button type="submit"
                class="btn bg-red-500 hover:bg-red-700 text-white">Delete</button>
            {% endif %}
        </div>
        <div style="display: none;" id="target"></div>
    </form>

    <script>
        document.getElementById('myForm').addEventListener('htmx:afterRequest', function (evt) {
            console.log('Request completed');
            document.getElementById('btn-table-refresh').click();
            hideModal();
        });
    </script>
#
"form_base_type_1": |
    <script>
        function removeForm() {
            show_loading();
            const me = document.getElementById("{{ attributes.id if attributes and attributes.id else "myForm" }}");
            if (me && me.parentNode) {
                me.parentNode.removeChild(me);
            }
            setTimeout(() => {
                hide_loading();
                console.log("1 秒待ちました。");
            }, 100);
        }
    </script>
    <div id="target"></div>
    <form 
        {{ format_attr(attributes) }} enctype="multipart/form-data"
    >
        {% for k, c in cols.items() %}
            {% if c['is_hidden1'] %}
            {% else %}
                <div class="mb-4">
                    <label for="{{ c['name'] }}" 
                           class="block text-sm font-bold mb-2 {{ ' ' + 'hidden' if c['is_hidden'] }}">
                        {% if c['label'] %}
                            {{ c['label'] }}
                        {% else %}
                            {{ c['name'] }}
                        {% endif %}
                    </label>
                    {% if c['input_type'] == 'text' %}
                      <input type="text" 
                            id="{{ c['name'] }}" 
                            name="{{ c['name'] }}" 
                            value="{{ c['value'] if 'value' in c else data[c['name']] if data and data[c['name']] else c['default'] if 'default' in c else '' }}" 
                            {% if c['primary_key'] %}readonly{% endif %}
                            {% if attributes.mode == 'delete' %}disabled {% endif %}
                            class="{{ classes.input }}"
                            {% if c['disabled'] %}disabled{% endif %} 
                            {% if c['readonly'] %}readonly{% endif %}
                      >
                    {% elif c['input_type'] == 'text1' %}
                      <input type="text" 
                            id="{{ c['name'] }}" 
                            name="{{ c['name'] }}" 
                            value="{{ data[c['name']] if data and data[c['name']] else c['default'] if 'default' in c else '' }}" 
                            {% if c['primary_key'] %}readonly{% endif %}
                            {% if attributes.mode == 'delete' %}disabled {% endif %}
                            class="{{ classes.input + ' hidden' if c['is_hidden'] }}"
                            {% if c['disabled'] %}disabled{% endif %} 
                            {% if c['readonly'] %}readonly{% endif %}
                      >
                    {% elif c['input_type'] == 'number' %}
                        <input 
                            type="number" 
                            id="{{ c['name'] }}" name="{{ c['name'] }}" 
                            value="{{ c['value'] if 'value' in c else data[c['name']] if data and data[c['name']] else c['default'] if 'default' in c else '' }}" 
                            {% if c['primary_key'] %}readonly{% endif %}
                            class="{{ classes.input  + ' hidden' if c['is_hidden'] }}"
                            {% if c['disabled'] %}disabled{% endif %} 
                            {% if c['readonly'] %}readonly{% endif %}
                        >
                    {% elif c['input_type'] == 'number1' %}
                        <input 
                            type="number" 
                            id="{{ c['name'] }}" name="{{ c['name'] }}" 
                            value="{{ data[c['name']] }}" 
                            {% if c['primary_key'] %}readonly{% endif %}
                            class="{{ classes.input }}"
                            {% if c['disabled'] %}disabled{% endif %} 
                            {% if c['readonly'] %}readonly{% endif %}
                        >
                    {% elif c['input_type'] == 'date' %}
                        <input 
                            type="date" 
                            id="{{ c['name'] }}" 
                            name="{{ c['name'] }}" 
                            {% if data[c['name']] %}
                                value="{{ data[c['name']].strftime('%Y-%m-%d') }}" 
                            {% endif %}
                            {% if c['primary_key'] %}readonly{% endif %}
                            class="{{ classes.input }}"
                            {% if c['disabled'] %}disabled{% endif %} 
                            {% if c['readonly'] %}readonly{% endif %}
                        >
                    {% elif c['input_type'] == 'checkbox' %}
                        <input 
                            type="checkbox" 
                            id="{{ c['name'] }}" 
                            name="{{ c['name'] }}" 
                            {% if data[c['name']] %} checked {% endif %} 
                            {% if c['primary_key'] %}disabled{% endif %} 
                            class="mr-2 leading-tight checkbox"
                            {% if c['disabled'] %}disabled{% endif %} 
                            {% if c['readonly'] %}readonly{% endif %}
                        >
                    {% elif c['input_type'] == 'select' %}
                        <select 
                            id="{{ c['name'] }}" 
                            name="{{ c['name'] }}" 
                            {% if c['primary_key'] %}disabled{% endif %}
                            class="{{ classes.input }}">
                            {% for option in c['options'] %}
                                <option 
                                    value="{{ option.value if 'value' in option else option }}" 
                                    {% if data[c['name']]==option or data[c['name']]==option.value %}selected{% endif %}>
                                    {{ option.label if 'label' in option else option }}
                                </option>
                            {% endfor %}
                            {% if c['disabled'] %}disabled{% endif %} 
                            {% if c['readonly'] %}readonly{% endif %} 
                        </select>
                    {% elif c['input_type'] == 'file' %}
                        <style>
                          .thumbnail {
                            width: 100px;
                            height: 100px;
                            object-fit: cover;
                          }
                        </style>
                        <div class="hidden flex flex-col items-center">
                          <label class="btn btn-primary">
                            <span>选择图片</span>
                            <input 
                              type="file" 
                              
                              class="hidden" 
                              id="image-input"
                            />
                          </label>
                          <div id="preview-container" class="mt-4 grid grid-cols-3 gap-4"></div>
                        </div>
                      
                        <script>
                          const imageInput = document.getElementById('image-input');
                          const previewContainer = document.getElementById('preview-container');
                      
                          imageInput.addEventListener('change', (event) => {
                            // 清空之前的缩略图
                            previewContainer.innerHTML = '';
                      
                            // 遍历用户选择的文件
                            Array.from(event.target.files).forEach(file => {
                              const reader = new FileReader();
                              
                              reader.onload = (e) => {
                                const img = document.createElement('img');
                                img.src = e.target.result;
                                img.alt = file.name;
                                img.className = 'thumbnail rounded border border-gray-300 shadow';
                                previewContainer.appendChild(img);
                              };
                      
                              reader.readAsDataURL(file);
                            });
                          });
                        </script>
                        <div class="form-control w-full ">
                            <label class="label">
                                <span class="label-text">{{ attributes.label }}</span>
                            </label>
                            <input name="{{ c['name'] }}" type="file" class="file-input file-input-bordered w-full " />
                        </div>
                    {% endif %}
                </div>
            {% endif %}
        {% endfor %}
        <div class="flex justify-end">
            <button type="button"
                {{ format_attr(config.btns.cancel.attributes if config and config.btns and config.btns.cancel and config.btns.cancel.attributes else None) }}
                class="btn bg-gray-500 hover:bg-gray-700 text-white mr-2">Cancel</button>
            {% if attributes.mode == 'create' %}
            <button type="submit"
                class="btn bg-green-500 hover:bg-blue-700 text-white">Create</button>
            {% endif %}
            {% if attributes.mode == 'edit' %}
            <button type="submit"
                class="btn bg-blue-500 hover:bg-blue-700 text-white">Update</button>
            {% endif %}
            {% if attributes.mode == 'delete' %}
            <button type="submit"
                class="btn bg-red-500 hover:bg-red-700 text-white">Delete</button>
            {% endif %}
        </div>
    </form>

    <script>
        document.getElementById('myForm').addEventListener('htmx:afterRequest', function (evt) {
            console.log('Request completed');
        });
    </script>
#
"form_search": |
    <form 
        {{ format_attr(attributes) }}
        class="gap-2">
        <input value="{{ data.search_params['search_term'] if data and 'search_params' in data and 'search_term' in data.search_params else '' }}" 
          type="text" 
          id="search_term"
          name="search_term" 
          placeholder="Search..."
          class="{{ classes.input }} mb-2">
        <input 
          name="posts"
          class="hidden">

        <div class="flex justify-end">
            <button 
              class="btn bg-red-500 text-white" 
              onclick="document.getElementById('search_term').value=''; this.parentElement.previousElementSibling.value = ''"
            >
              {{ icons.clear }}
              Clear
            </button>
            <button type="submit" class="hidden text-blue-500">
                <span class="hidden">Search</span>
                {{ icons.search }}
            </button>
            <button type="submit"
                class="btn bg-green-500 hover:bg-green-700 text-white">Search</button>
        </div>
    </form>
#
"alert": |
    <div role="alert"
        {{ format_attr(attributes)}}>
        {{ icons.info }}
        <span>
          55555
          {{ content }}
        </span>
    </div>
#
"progress": |
    <progress class="progress {{ attributes.color.value }} w-56" value="{{ attributes.value.value }}" max="{{ attributes.max.value }}"></progress>
#
"badge": |
    <span class="badge {{ attributes.color.value }}">{{ attributes.text.value }}</span>
#
"checkbox": |
    <div class="form-control">
      <label class="label cursor-pointer">
        <span class="label-text">Remember me</span>
        <input type="checkbox" checked="checked" class="checkbox" />
      </label>
    </div>
#
"tab": |
    <input
        type="radio"
        name="my_tabs"
        role="tab"
        class="tab"
        {{ format_attr(attributes) }}
        />
    <div role="tabpanel" class="tab-content bg-base-100 border-base-300 rounded-box p-6">
      {{ content }}
      {{ format_children(children) }}
    </div>
#
"tabs": |
    <div role="tablist" class="tabs tabs-lifted">
      {{ format_children(children) }}
    </div>
#
"tabs1": |
    <div class="tabs {{ attributes.class.value }}">
        {% for tab in attributes.tabs.value %}
            <a class="tab {{ tab.class }}">{{ tab.text }}</a>
        {% endfor %}
    </div>
#
"tabs2": |
    <div style="width: 100%;" class="overflow-x-auto">
    <div role="tablist" class="tabs tabs-lifted" style="width: auto;">
      <input type="radio" name="my_tabs_2" role="tab" class="tab whitespace-nowrap" aria-label="Tab 1" />
      <div role="tabpanel" style="width: auto;" class="tab-content bg-base-100 border-base-300 rounded-box p-6 w-full">
        Tab content 1
      </div>

      <input
        type="radio"
        name="my_tabs_2"
        role="tab"
        class="tab whitespace-nowrap"
        aria-label="Tab 2"
        checked="checked" />
      <div role="tabpanel" style="width: 100%;" class="tab-content bg-base-100 border-base-300 rounded-box p-6">
        Tab content 2
      </div>

      <input type="radio" name="my_tabs_2" role="tab" class="tab whitespace-nowrap" aria-label="Tab 3" />
      <div role="tabpanel" class="tab-content bg-base-100 border-base-300 rounded-box p-6">
        Tab content 3
      </div>
          
      <input type="radio" name="my_tabs_2" role="tab" class="tab whitespace-nowrap" aria-label="Tab 3" />
      <div role="tabpanel" class="tab-content bg-base-100 border-base-300 rounded-box p-6">
        Tab content 3
      </div>
          
      <input type="radio" name="my_tabs_2" role="tab" class="tab whitespace-nowrap" aria-label="Tab 3" />
      <div role="tabpanel" class="tab-content bg-base-100 border-base-300 rounded-box p-6">
        Tab content 3
      </div>
      
          
      <input type="radio" name="my_tabs_2" role="tab" class="tab whitespace-nowrap" aria-label="Tab 3" />
      <div role="tabpanel" class="tab-content bg-base-100 border-base-300 rounded-box p-6">
        Tab content 3
      </div>
      
          
      <input type="radio" name="my_tabs_2" role="tab" class="tab" aria-label="Tab 3" />
      <div role="tabpanel" class="tab-content bg-base-100 border-base-300 rounded-box p-6">
        Tab content 3
      </div>
      
      <input type="radio" name="my_tabs_2" role="tab" class="tab" aria-label="Tab 3" />
      <div role="tabpanel" class="tab-content bg-base-100 border-base-300 rounded-box p-6">
        Tab content 3
      </div>
    </div>
    </div>
#
"collapse": |
    <div class="collapse bg-base-200">
        <input type="checkbox" /> 
        <div class="collapse-title text-xl font-medium">
            {{ attributes.title.value }}
        </div>
        <div class="collapse-content"> 
            <p>{{ attributes.content.value }}</p>
        </div>
    </div>
#
"tooltip": |
    <div class="tooltip" data-tip="{{ attributes.tip }}">
        <button class="btn">{{ attributes.text }}</button>
    </div>
#
"dropdown": |
    <div class="dropdown">
        <label tabindex="0" class="btn m-1">{{ attributes.label.value }}</label>
        <ul tabindex="0" class="dropdown-content menu p-2 shadow bg-base-100 rounded-box w-52">
            {% for item in attributes.items.value %}
                <li><a>{{ item }}</a></li>
            {% endfor %}
        </ul>
    </div>
#
"carousel1": |
    <div class="carousel w-full">
        {% for item in attributes.items.value %}
            <div id="slide{{ loop.index }}" class="carousel-item relative w-full">
                <img src="{{ item.image }}" class="w-full" alt="Slide {{ loop.index }}">
                <div class="absolute flex justify-between transform -translate-y-1/2 left-5 right-5 top-1/2">
                    <a href="#slide{{ loop.previtem if loop.previtem else loop.length }}" class="btn btn-circle">❮</a> 
                    <a href="#slide{{ loop.nextitem if loop.nextitem else 1 }}" class="btn btn-circle">❯</a>
                </div>
            </div>
        {% endfor %}
    </div>
#
"carousel": |
    <div class="carousel carousel-center rounded-box">
      <div class="carousel-item">
        <img src="https://img.daisyui.com/images/stock/photo-1559703248-dcaaec9fab78.webp" alt="Pizza" />
      </div>
      <div class="carousel-item">
        <img
          src="https://img.daisyui.com/images/stock/photo-1565098772267-60af42b81ef2.webp"
          alt="Pizza" />
      </div>
      <div class="carousel-item">
        <img
          src="https://img.daisyui.com/images/stock/photo-1572635148818-ef6fd45eb394.webp"
          alt="Pizza" />
      </div>
      <div class="carousel-item">
        <img
          src="https://img.daisyui.com/images/stock/photo-1494253109108-2e30c049369b.webp"
          alt="Pizza" />
      </div>
      <div class="carousel-item">
        <img src="https://img.daisyui.com/images/stock/photo-1550258987-190a2d41a8ba.webp" alt="Pizza" />
      </div>
      <div class="carousel-item">
        <img src="https://img.daisyui.com/images/stock/photo-1559181567-c3190ca9959b.webp" alt="Pizza" />
      </div>
      <div class="carousel-item">
        <img
          src="https://img.daisyui.com/images/stock/photo-1601004890684-d8cbf643f5f2.webp"
          alt="Pizza" />
      </div>
    </div>
    <div class="carousel w-full">
      <div id="item1" class="carousel-item w-full">
        <img
          src="https://img.daisyui.com/images/stock/photo-1625726411847-8cbb60cc71e6.webp"
          class="w-full" />
      </div>
      <div id="item2" class="carousel-item w-full">
        <img
          src="https://img.daisyui.com/images/stock/photo-1609621838510-5ad474b7d25d.webp"
          class="w-full" />
      </div>
      <div id="item3" class="carousel-item w-full">
        <img
          src="https://img.daisyui.com/images/stock/photo-1414694762283-acccc27bca85.webp"
          class="w-full" />
      </div>
      <div id="item4" class="carousel-item w-full">
        <img
          src="https://img.daisyui.com/images/stock/photo-1665553365602-b2fb8e5d1707.webp"
          class="w-full" />
      </div>
    </div>
    <div class="flex w-full justify-center gap-2 py-2">
      <a href="#item1" class="btn btn-xs">1</a>
      <a href="#item2" class="btn btn-xs">2</a>
      <a href="#item3" class="btn btn-xs">3</a>
      <a href="#item4" class="btn btn-xs">4</a>
    </div>
#
"modal": |
    <div class="modal" id="{{ attributes.id.value }}">
        <div class="modal-box">
            <h3 class="font-bold text-lg">{{ attributes.title.value }}</h3>
            <p class="py-4">{{ attributes.content.value }}</p>
            <div class="modal-action">
                <label for="{{ attributes.id.value }}" class="btn">Close</label>
            </div>
        </div>
    </div>
#
"rating": |
    <div class="rating">
        {% for i in range(attributes.max.value) %}
            <input type="radio" name="{{ attributes.name.value }}" class="mask mask-star-2 bg-orange-400" {% if i + 1 == attributes.value.value %}checked{% endif %}>
        {% endfor %}
    </div>
#
"timeline": |
    <ul class="timeline timeline-vertical">
        {% for item in attributes.items.value %}
            <li>
                <div class="timeline-start">{{ item.time }}</div>
                <div class="timeline-middle">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z" clip-rule="evenodd" /></svg>
                </div>
                <div class="timeline-end timeline-box">{{ item.content }}</div>
                <hr/>
            </li>
        {% endfor %}
    </ul>
#
"drawer": |
    <div class="drawer">
        <input id="{{ attributes.id.value }}" type="checkbox" class="drawer-toggle" />
        <div class="drawer-content">
            <!-- Page content here -->
            <label for="{{ attributes.id.value }}" class="btn btn-primary drawer-button">Open drawer</label>
        </div> 
        <div class="drawer-side">
            <label for="{{ attributes.id.value }}" class="drawer-overlay"></label>
            <ul class="menu p-4 w-80 min-h-full bg-base-200 text-base-content">
                {% for item in attributes.menu_items.value %}
                    <li><a>{{ item }}</a></li>
                {% endfor %}
            </ul>
        </div>
    </div>
#
"steps": |
    <ul class="steps steps-vertical lg:steps-horizontal">
        {% for step in attributes.steps.value %}
            <li class="step {% if loop.index <= attributes.current_step.value %}step-primary{% endif %}">{{ step }}</li>
        {% endfor %}
    </ul>
#
"hero1": |
    <div class="hero min-h-screen" style="background-image: url({{ attributes.background_image }});">
        <div class="hero-overlay bg-opacity-60"></div>
        <div class="hero-content text-center text-neutral-content">
            <div class="max-w-md">
                <h1 class="mb-5 text-5xl font-bold">{{ attributes.title.value }}</h1>
                <p class="mb-5">{{ attributes.description }}</p>
                <button class="btn btn-primary">{{ attributes.button_text }}</button>
            </div>
        </div>
    </div>
#
"hero": |
    <div class="hero rounded bg-base-200 min-h-screen">
      <div class="hero-content flex-col lg:flex-row">
        <img
          src="https://img.daisyui.com/images/stock/photo-1635805737707-575885ab0820.webp"
          class="max-w-sm rounded-lg shadow-2xl" />
        <div>
          <h1 class="text-5xl font-bold">Box Office News!</h1>
          <p class="py-6">
            Provident cupiditate voluptatem et in. Quaerat fugiat ut assumenda excepturi exercitationem
            quasi. In deleniti eaque aut repudiandae et a id nisi.
          </p>
          <button class="btn btn-primary">Get Started</button>
        </div>
      </div>
    </div>
    <div class="hero bg-base-200 min-h-screen">
      <div class="hero-content text-center">
        <div class="max-w-md">
          <h1 class="text-5xl font-bold">Hello there</h1>
          <p class="py-6">
            Provident cupiditate voluptatem et in. Quaerat fugiat ut assumenda excepturi exercitationem
            quasi. In deleniti eaque aut repudiandae et a id nisi.
          </p>
          <button class="btn btn-primary">Get Started</button>
        </div>
      </div>
    </div>
#
"chat_bubble": |
    <div class="chat {% if attributes.position.value == 'end' %}chat-end{% else %}chat-start{% endif %}">
        <div class="chat-image avatar">
            <div class="w-10 rounded-full">
                <img alt="Avatar" src="{{ attributes.avatar.value }}" />
            </div>
        </div>
        <div class="chat-header">
            {{ attributes.name.value }}
            <time class="text-xs opacity-50">{{ attributes.time.value }}</time>
        </div>
        <div class="chat-bubble">{{ attributes.message.value }}</div>
        <div class="chat-footer opacity-50">
            {{ attributes.footer.value }}
        </div>
    </div>
#
"stats": |
    <div class="stats stats-vertical shadow">
        {{ format_children(children) }}
    </div>
#
"stat": |
    <div class="stats stats-vertical shadow">
      <div class="stat">
        <div class="stat-title">{{ attributes.title }}</div>
        <div class="stat-value">{{ attributes.value }}</div>
        <div class="stat-desc">{{ attributes.desc }}</div>
      </div>
    </div>
#
"file_input": |
    <div class="form-control w-full ">
        <label class="label">
            <span class="label-text">{{ attributes.label.value }}</span>
        </label>
        <input type="file" class="file-input file-input-bordered w-full " />
    </div>
#
"code": |
    <div class="mockup-code">
        {% for line in attributes.code.value.split('\n') %}
        <pre data-prefix="{{ loop.index }}"><code>{{ line }}</code></pre>
        {% endfor %}
    </div>
#
"breadcrumbs": |
    <div class="text-sm breadcrumbs">
        <ul>
            {% for item in attributes.items.value %}
            <li><a href="{{ item.link }}">{{ item.text }}</a></li>
            {% endfor %}
        </ul>
    </div>
#
"menu": |
    <ul class="menu bg-base-200 w-56 rounded-box">
        {% for item in attributes.items.value %}
        <li>
            {% if item.submenu %}
            <details open>
                <summary>{{ item.text }}</summary>
                <ul>
                    {% for subitem in item.submenu %}
                    <li><a href="{{ subitem.link }}">{{ subitem.text }}</a></li>
                    {% endfor %}
                </ul>
            </details>
            {% else %}
            <a href="{{ item.link }}">{{ item.text }}</a>
            {% endif %}
        </li>
        {% endfor %}
    </ul>
#
"radial_progress": |
    <div class="radial-progress text-primary" style="--value:{{ attributes.value.value }};">{{ attributes.value.value }}%</div>
#
"skeleton": |
    <div class="skeleton w-{{ attributes.width.value }} h-{{ attributes.height.value }}"></div>
#
"alert_dialog": |
    <input type="checkbox" id="{{ attributes.id.value }}" class="modal-toggle" />
    <div class="modal">
        <div class="modal-box">
            <h3 class="font-bold text-lg">{{ attributes.title.value }}</h3>
            <p class="py-4">{{ attributes.content.value }}</p>
            <div class="modal-action">
                <label for="{{ attributes.id.value }}" class="btn btn-primary">Confirm</label>
                <label for="{{ attributes.id.value }}" class="btn">Cancel</label>
            </div>
        </div>
    </div>
#
"artboard": |
    <div class="artboard artboard-demo">
        <div class="text-4xl font-bold">{{ attributes.text.value }}</div>
    </div>
#
"btn": |
    <button hx-get="/create?table_name=Yuangong" hx-target="#modal-content"
                          hx-trigger="click" onclick="modal_form.showModal()" class="text-blue-500 hover:underline">Edit</button>
#
"button": |
    <button
        class="btn btn-primary my-2
          {% if attributes.class %} {{ attributes.class }} {% endif %}"
          {% if attributes.hx_post %}hx-post="{{ attributes.hx_post }}"{% endif %}
          {% if attributes.hx_get %}hx-get="{{ attributes.hx_get }}"{% endif %}
          {% if attributes.hx_target %}hx-target="{{ attributes.hx_target }}"{% endif %}
          {% if attributes.hx_encoding %}hx-encoding="{{ attributes.hx_encoding }}"{% endif %}
          {% if attributes.enctype %}enctype="{{ attributes.enctype }}"{% endif %}
          {% for attr, value in attributes.items() %}
              {% if attr not in ['class', 'fields', 'submit_text', 'hx_post', 'hx_target', 'hx_encoding', 'enctype'] %}
                  {{ attr }}="{{ value }}"
              {% endif %}
          {% endfor %}>
        {{ attributes.text }}
    </button>
#
"link": |
    <a class="link {{ attributes.class if attributes and attributes.class else '' }}"
        {% for attr, value in attributes.items() %}
            {% if attr not in ['class'] %}
                {{ attr }}="{{ value }}"
            {% endif %}
        {% endfor %}
    >
        {{ config.label }}
    </a>
#
"h1": |
    {% for d in data %}
        <h1 {{ format_attr(attributes) }}>
            {% if value and 'name' in value and value['name'] in d %}
                {{ d[value['name']] }}
            {% elif key and key in d %}
                {{ d[key] }}
            {% endif %}
        </h1>
    {% endfor %}
#
"p": |
    {% for d in data %}
      <p {{ format_attr(attributes) }}>
            {% if value and 'name' in value and value['name'] in d %}
                {{ d[value['name']] }}
            {% elif key and key in d %}
                {{ d[key] }}
            {% endif %}
      </p>
    {% endfor %}
#
"div": |
    {{ data }}
    {% for d in data %}
        <div {{ format_attr(attributes) }}>
            {% if value and 'name' in value and value['name'] in d %}
                {{ d[value['name']] }}
            {% elif key and key in d %}
                {{ d[key] }}
            {% endif %}
        </div>
    {% endfor %}
#
"file_upload_form": |
    <form id="uploadForm"
          hx-encoding="multipart/form-data"
          hx-post="/upload"
          hx-target="#message"
          hx-indicator="#progress"
          enctype="multipart/form-data">
        <div>
            <div class="form-control w-full ">
                <label class="label">
                    <span class="label-text">{{ attributes.label }}</span>
                </label>
                <input id="fileInput" name="file" type="file" class="file-input file-input-bordered w-full " />
            </div>
        </div>
        <button class="btn btn-primary w-full mt-4" type="submit">{{ attributes.button.label if attributes.button and attributes.button.label else 'Upload' }}</button>
    </form>
    <progress id="progress" class="htmx-indicator w-full" value="0" max="100"></progress>
    <div id="message"></div>
    <script>
        document.body.addEventListener('htmx:xhr:progress', function(evt) {
            htmx.find('#progress').setAttribute('value', evt.detail.loaded/evt.detail.total * 100)
        });
        document.body.addEventListener('htmx:beforeRequest', function(evt) {
            var file = htmx.find('#fileInput').files[0];
            if (file) {
                var allowedExtensions = ['.txt', '.pdf', '.png', '.jpg', '.jpeg', '.gif'];
                var maxFileSize = 5 * 1024 * 1024; // 5 MB

                var fileExtension = '.' + file.name.split('.').pop().toLowerCase();
                if (!allowedExtensions.includes(fileExtension)) {
                    htmx.find('#message').innerHTML = `File type not allowed. Allowed types are: ${allowedExtensions.join(', ')}`;
                    htmx.find('#message').className = 'error';
                    evt.preventDefault();
                    return;
                }

                if (file.size > maxFileSize) {
                    htmx.find('#message').innerHTML = `File size exceeds the maximum limit of ${maxFileSize / (1024 * 1024)} MB`;
                    htmx.find('#message').className = 'error';
                    evt.preventDefault();
                    return;
                }
            }
        });
    </script>
#
"file_manager": |
    <div id="file-manager">
        <style>
            .file-list {
                display: grid;
                grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
                gap: 20px;
            }
            .file-item {
                text-align: center;
            }
            .file-item img {
                max-width: 100%;
                height: auto;
                margin: auto;
                display: block;
            }
            .file-item svg {
                max-width: 100%;
                height: auto;
                margin: auto;
                display: block;
            }
            .file-item p {
                overflow: hidden;        /* はみ出た部分を表示しない */
                white-space: nowrap;     /* 行を折り返さない */
                text-overflow: ellipsis; /* 省略記号を表示する */
            }
        </style>
        <h1>{{ attributes.label }}</h1>
        <div class="file-list">
            {% for file in files %}
            <div class="file-item">
                {% if file.lower().endswith(('.png', '.jpg', '.jpeg', '.gif')) %}
                <img src="./uploaded/{{ file }}" alt="{{ file }}" style="width:100px;height:100px;object-fit:cover;">
                {% else %}
                <svg style="width:100px;height:100px;object-fit:cover;" class="file-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"></path>
                    <polyline points="13 2 13 9 20 9"></polyline>
                </svg>
                {% endif %}
                <p>{{ file }}</p>
                <button hx-get="/preview/{{ file }}" hx-target="#preview">Preview</button>
            </div>
            {% endfor %}
        </div>
        <div id="preview"></div>
    </div>
#
"form_container": |
    <div {{ format_attr(attributes) }} >
    </div>
#
"blogs": |
    <div {{ format_attr(attributes) }} >
        Blogs
        {{ format_children(children) }}


    </div>
        
#
"posts": |
    <div class="mt-5" {{ format_attr(attributes) }}>
        {% if data|length > 1 %}
            <div class="flex justify-end gap-2">
                <button 
                    type="submit"
                    class="btn bg-green-500 hover:bg-blue-700 text-white"
                    {{ format_attr(config.buttons.prev.attributes) }}
                >
                    Prev
                </button>
                <button 
                    type="submit"
                    class="btn bg-green-500 hover:bg-blue-700 text-white"
                    {{ format_attr(config.buttons.next.attributes) }}
                >
                    Next
                </button>
            </div>
        {% endif %}
        {{ format_children(children) }}
    </div>
#
"post": |
    {% for d in data['posts'] %}
        <div class="card bg-base-100 shadow-xl w-full mt-2 mb-2 
            {{ attributes.class if attributes and attributes.class else '' }}"
            {{ format_attr(attributes) if attributes }}
        >
            <div class="card-body">
                <div class="card-actions justify-end">
                    {% if d and d.attributes and d.attributes.del %}
                        <div class="dropdown dropdown-end">
                          <button class="btn btn-square btn-sm" >
                                {{ icons.ellipsis_horizontal }}
                          </button>
                          <ul
                            tabindex="0"
                            class="menu dropdown-content bg-base-100 rounded-box z-[1] mt-4 p-2 shadow">
                            {% if d and d.attributes and d.attributes.edit %}
                                <li>
                                    <button 
                                        class="btn btn-square btn-sm"
                                        {{ format_attr(d.attributes.edit) }}
                                    >
                                        {{ icons.edit }}
                                    </button>
                                </li>
                            {% endif %}
                            <li>
                                <div class="hidden">
                                    <button 
                                        class="btn btn-square btn-sm text-red-500"
                                        {{ format_attr(d.attributes.del) }}
                                    >
                                        {{ icons.trash }}
                                    </button>
                                    <button 
                                        class="btn btn-square btn-sm"
                                        onmousedown="onMousedownDataCardCancel(this)">
                                        {{ icons.cancel }}
                                    </button>
                                </div>
                                <div>
                                    <button 
                                        class="btn btn-square btn-sm" 
                                        onmousedown="onMousedownDataCardTrash(this)"
                                    >
                                        {{ icons.trash }}
                                    </button>
                                </div>
                            </li>
                          </ul>
                        </div>
                    {% endif %}
                </div>
                {% if items %}
                    {% for item in items %}
                        {{ item.key }} :
                        {% if item.key in d %}
                            {{ d[item.key] }} 
                        {% endif %}
                        </br>
                    {% endfor %}
                {% endif%}
                <div class="card-actions justify-end">
                    {% if d.attributes.is_single == False %}
                        {% if d and d.attributes and d.attributes.go %}
                            <button class="btn btn-square btn-sm"
                                {{ format_attr(d.attributes.go) }}
                            >
                                {{ icons.arrow_right }}
                            </button>
                        {% endif %}
                    {% endif %}
                    {% if d.attributes.is_single == True %}
                        {% if d and d.attributes and d.attributes.back %}
                            <button class="btn btn-square btn-sm"
                                hx-target="#blogs"
                                {{ format_attr(d.attributes.back) }}
                            >
                                {{ icons.arrow_left }}
                            </button>
                        {% endif %}
                    {% endif %}
                </div>
            </div>
        </div>
        {% if d.attributes.is_single == True %}
            {{ format_children(children) }}
        {% endif %}
    {% endfor %}
#
"comments": |
    <div {{ format_attr(attributes) if attributes }}
    >
        {{ format_children(children) }}
    </div
#
"comment": |
    {% for d in data['comments'] %}
        <div class="card bg-base-100 shadow-xl w-full mt-2 mb-2 
            {{ attributes.class if attributes and attributes.class else '' }}"
            {{ format_attr(attributes) if attributes }}
        >
            <div class="card-body break-all" style="word-wrap: break-word;">
                {% if items %}
                    {% for item in items %}
                        {{ item.key }} :
                        {% if item.key in d %}
                            {{ d[item.key] }} 
                        {% endif %}
                        </br>
                    {% endfor %}
                {% endif%}
            </div>
        </div>
    {% endfor %}
#
"container_data": |
    <div {{ format_attr(attributes) if attributes }}>
        {{ format_children(children) }}
    </div>
#
data_card: |
    {% for d in data %}
        <div 
            class="
                card bg-base-100 shadow-xl w-full mt-2 mb-2 
                {{ attributes.class if attributes and attributes.class else '' }}
            "
            {{ format_attr(attributes) if attributes }}
        >
            <div class="card-body break-all" style="word-wrap: break-word;">
                {% if config %}
                    <div class="card-actions justify-end">
                        <div class="dropdown dropdown-end">
                            <button class="btn btn-square btn-sm" >
                                {{ icons.ellipsis_horizontal }}
                            </button>
                            <ul
                                tabindex="0"
                                class="menu dropdown-content bg-base-100 rounded-box z-[1] mt-4 p-2 shadow"
                            >
                                <li>
                                    <div>
                                        <button class="btn btn-square btn-sm">
                                            {{ icons.edit }}
                                        </button>
                                    </div>
                                </li>
                                <li>
                                    <div class="hidden">
                                        {% if config.buttons and config.buttons.delete %}
                                            <button 
                                                class="btn btn-square btn-sm text-red-500"
                                                {{ format_attr(config.buttons.delete.attributes) }}
                                            >
                                                {{ icons.trash }}
                                            </button>
                                        {% endif %}
                                        
                                        {% if config.buttons and config.buttons.cancel %}
                                            <button class="btn btn-square btn-sm"
                                                onmousedown="onMousedownDataCardCancel(this)">
                                                {{ icons.cancel }}
                                            </button>
                                        {% endif %}
                                    </div>
                                    <div>
                                        {% if config.buttons and config.buttons.delete %}
                                            <button class="btn btn-square btn-sm" 
                                                onmousedown="onMousedownDataCardTrash(this)"
                                            >
                                                {{ icons.trash }}
                                            </button>
                                        {% endif %}
                                    </div>
                                        
                                </li>
                            </ul>
                        </div>
                    </div>
                {% endif%}
                {% if items %}
                    {% for item in items %}
                        {{ item.key }} :
                        {% if item.key in d %}
                            {{ d[item.key] }} 
                        {% endif %}
                        </br>
                    {% endfor %}
                {% endif%}
                <div class="card-actions justify-end">
                    {% if config.is_single == True %}
                        {% if config.buttons and config.buttons.left %}
                            <button 
                                class="btn btn-square btn-sm"
                                {{ format_attr(config.buttons.left.attributes, d) }}
                            >
                                {{ icons.arrow_left }}
                            </button>
                        {% endif %}
                    {% endif %}
                    {% if config.is_single == False %}
                        {% if config.buttons and config.buttons.right %}
                            <button 
                                class="btn btn-square btn-sm"
                                {{ format_attr(config.buttons.right.attributes, d) }}
                            >
                                {{ icons.arrow_right }}
                            </button>
                        {% endif %}
                    {% endif %}
                </div>
            </div>
        </div>
    {% endfor %}
#
data_card1: |
    {% for d in data %}
        <div 
            class="
                card bg-base-100 shadow-xl w-full mt-2 mb-2 
                {{ attributes.class if attributes and attributes.class else '' }}
            "
            {{ format_attr(attributes) if attributes }}
        >
            <div class="card-body break-all" style="word-wrap: break-word;">
                {% if config %}
                    <div class="card-actions justify-end">
                        <div class="dropdown dropdown-end">
                            <button class="btn btn-square btn-sm" >
                                {{ icons.ellipsis_horizontal }}
                            </button>
                            <ul
                                tabindex="0"
                                class="menu dropdown-content bg-base-100 rounded-box z-[1] mt-4 p-2 shadow"
                            >
                                <li>
                                    <div>
                                        <button class="btn btn-square btn-sm">
                                            {{ icons.edit }}
                                        </button>
                                    </div>
                                </li>
                                <li>
                                    <div class="hidden">
                                        {% if config.buttons and config.buttons.delete %}
                                            <button 
                                                class="btn btn-square btn-sm text-red-500"
                                                {{ format_attr(config.buttons.delete.attributes) }}
                                            >
                                                {{ icons.trash }}
                                            </button>
                                        {% endif %}
                                        
                                        {% if config.buttons and config.buttons.cancel %}
                                            <button class="btn btn-square btn-sm"
                                                onmousedown="onMousedownDataCardCancel(this)">
                                                {{ icons.cancel }}
                                            </button>
                                        {% endif %}
                                    </div>
                                    <div>
                                        {% if config.buttons and config.buttons.delete %}
                                            <button class="btn btn-square btn-sm" 
                                                onmousedown="onMousedownDataCardTrash(this)"
                                            >
                                                {{ icons.trash }}
                                            </button>
                                        {% endif %}
                                    </div>
                                        
                                </li>
                            </ul>
                        </div>
                    </div>
                {% endif%}
                {% if items %}
                    {% for item in items %}
                        {{ item.key }} :
                        {% if item.key in d %}
                            {{ d[item.key] }} 
                        {% endif %}
                        </br>
                    {% endfor %}
                {% endif%}
                <div class="card-actions justify-end">
                    {% if config.buttons and config.buttons.left %}>
                        <button class="btn btn-square btn-sm"
                        >
                            {{ icons.arrow_left }}
                        </button>
                    {% endif %}
                    {% if config.buttons and config.buttons.right %}
                        <button 
                            class="btn btn-square btn-sm"
                            {{ format_attr(d.attributes.go) }}
                        >
                            {{ icons.arrow_right }}
                        </button>
                    {% endif %}
                </div>
            </div>
        </div>
    {% endfor %}
#
"editor-quill": |
    <div>
        
      <h1 class="text-2xl font-bold mb-4">Quill 富文本编辑器 + DaisyUI</h1>
      
      <div id="editor-container" class="border mb-4" style="height: 200px;"></div>
      <button id="saveBtn" class="btn btn-primary mt-4">保存内容</button>

      <h2 class="text-xl font-semibold mt-8">预览内容</h2>
      <div id="preview-container" class="prose mt-4 border p-4">
        <!-- 编辑后的内容会插入到这里 -->
      </div>

      <script src="https://cdn.quilljs.com/1.3.7/quill.min.js"></script>
      <script>
        var quill = new Quill('#editor-container', {
          theme: 'snow',
          modules: {
            toolbar: [
                    ['bold', 'italic'], 
                    ['link', 'image'], 
                    [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown
                    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
                ]
          }
        });

        // 保存按钮点击事件
        document.getElementById('saveBtn').addEventListener('click', function () {
          var htmlContent = quill.root.innerHTML;

          // 包装内容以应用 DaisyUI 样式
          var styledContent = `<div class="prose">${htmlContent}</div>`;
          document.getElementById('preview-container').innerHTML = styledContent;
        });
      </script>
    </div>
#
"pg": |
    <div id="content">
      <!-- Initial content here -->
    </div>

    <div id="pagination">
      <button class="btn" 
              id="p1"
              hx-get="/api/data?page=1" 
              hx-target="#content" 
              hx-push-url="true" 
              hx-trigger="click">
        Page 1
      </button>
      <button class="btn"
              id="p2"
              hx-get="/api/data?page=2" 
              hx-target="#content" 
              hx-push-url="true" 
              hx-trigger="click">
        Page 2
      </button>
      <!-- More pagination buttons -->
    </div>
#
"buttons": |
    <div class="flex justify-start">
        {{ format_children(children) }}
    </div>
#
icons:
    add: |
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
            <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v6m3-3H9m12 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
        </svg>
    "delete": |
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
            <path stroke-linecap="round" stroke-linejoin="round" d="m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0" />
        </svg>
    "edit": |
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
            <path stroke-linecap="round" stroke-linejoin="round" d="m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10" />
        </svg>
    "next": |
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
            <path stroke-linecap="round" stroke-linejoin="round" d="m8.25 4.5 7.5 7.5-7.5 7.5" />
        </svg>
    "prev": |
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
            <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5 8.25 12l7.5-7.5" />
        </svg>
    "refresh": |
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
            <path stroke-linecap="round" stroke-linejoin="round" d="M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0 3.181 3.183a8.25 8.25 0 0 0 13.803-3.7M4.031 9.865a8.25 8.25 0 0 1 13.803-3.7l3.181 3.182m0-4.991v4.99" />
        </svg>
    "search": |
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
            <path stroke-linecap="round" stroke-linejoin="round" d="m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z" />
        </svg>
    "ok": |
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
            <path stroke-linecap="round" stroke-linejoin="round" d="m4.5 12.75 6 6 9-13.5" />
        </svg>
    "cancel": |
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
            <path stroke-linecap="round" stroke-linejoin="round" d="M6 18 18 6M6 6l12 12" />
        </svg>
    "close": |
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
            <path stroke-linecap="round" stroke-linejoin="round" d="M6 18 18 6M6 6l12 12" />
        </svg>
    "user": |
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
            <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 6a3.75 3.75 0 1 1-7.5 0 3.75 3.75 0 0 1 7.5 0ZM4.501 20.118a7.5 7.5 0 0 1 14.998 0A17.933 17.933 0 0 1 12 21.75c-2.676 0-5.216-.584-7.499-1.632Z" />
        </svg>
    "menu": |
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
            <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
        </svg>
    "info": |
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
            <path stroke-linecap="round" stroke-linejoin="round" d="m11.25 11.25.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9-3.75h.008v.008H12V8.25Z" />
        </svg>
    "arrow_right": |
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
            <path stroke-linecap="round" stroke-linejoin="round" d="M13.5 4.5 21 12m0 0-7.5 7.5M21 12H3" />
        </svg>
    "arrow_left": |
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
            <path stroke-linecap="round" stroke-linejoin="round" d="M10.5 19.5 3 12m0 0 7.5-7.5M3 12h18" />
        </svg>
    "trash": |
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
            <path stroke-linecap="round" stroke-linejoin="round" d="m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0" />
        </svg>
    "clear": |
        <svg data-slot="icon" fill="none" stroke-width="1.5" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
          <path stroke-linecap="round" stroke-linejoin="round" d="m9.75 9.75 4.5 4.5m0-4.5-4.5 4.5M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"></path>
        </svg>
    "ellipsis_horizontal": |
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
          <path stroke-linecap="round" stroke-linejoin="round" d="M6.75 12a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0ZM12.75 12a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0ZM18.75 12a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Z" />
        </svg>
#
"classes":
    "input": |
        input input-bordered input-md w-full

#
